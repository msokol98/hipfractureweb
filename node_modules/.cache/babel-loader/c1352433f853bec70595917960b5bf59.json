{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/temp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { apiHost } from 'axios';\nimport mapIdxToLetter from 'utils/mapIdxToLetter';\n\nconst Temp = () => {\n  _s();\n\n  const url = \"https://opentdb.com/api.php?amount=10\";\n\n  const fetchQuiz = () => {\n    axios.get(url).then(res => {\n      const quiz = res.data.results;\n      quiz.forEach((question, questionNumber) => {\n        let answers = [...question.incorrect_answers, question.correct_answer];\n        answers = shuffle(answers);\n        answers = answers.map((answer, idx) => {\n          return {\n            body: answer,\n            letter: mapIdxToLetter(idx)\n          };\n        });\n        const correctAnswer = answers.find(answer => answer.body === question.correct_answer).letter;\n        const prompt = question.question;\n        const number = questionNumber;\n        console.log({\n          correctAnswer,\n          prompt,\n          number,\n          answer\n        });\n      });\n    });\n  };\n\n  useEffect(fetchQuiz, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Temp, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Temp;\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default Temp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Temp\");","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/temp.js"],"names":["React","useState","useEffect","axios","apiHost","mapIdxToLetter","Temp","url","fetchQuiz","get","then","res","quiz","data","results","forEach","question","questionNumber","answers","incorrect_answers","correct_answer","shuffle","map","answer","idx","body","letter","correctAnswer","find","prompt","number","console","log","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAMC,GAAG,GAAG,uCAAZ;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACpBL,IAAAA,KAAK,CAACM,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAoBC,GAAG,IAAI;AACvB,YAAMC,IAAI,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAAtB;AAEAF,MAAAA,IAAI,CAACG,OAAL,CAAa,CAACC,QAAD,EAAWC,cAAX,KAA8B;AACvC,YAAIC,OAAO,GAAG,CAAC,GAAGF,QAAQ,CAACG,iBAAb,EAAgCH,QAAQ,CAACI,cAAzC,CAAd;AACAF,QAAAA,OAAO,GAAGG,OAAO,CAACH,OAAD,CAAjB;AACAA,QAAAA,OAAO,GAAGA,OAAO,CAACI,GAAR,CAAY,CAACC,MAAD,EAASC,GAAT,KAAiB;AACnC,iBAAO;AACHC,YAAAA,IAAI,EAAEF,MADH;AAEHG,YAAAA,MAAM,EAAErB,cAAc,CAACmB,GAAD;AAFnB,WAAP;AAIH,SALS,CAAV;AAOA,cAAMG,aAAa,GAAGT,OAAO,CAACU,IAAR,CAAaL,MAAM,IAAIA,MAAM,CAACE,IAAP,KAAgBT,QAAQ,CAACI,cAAhD,EAAgEM,MAAtF;AACA,cAAMG,MAAM,GAAGb,QAAQ,CAACA,QAAxB;AACA,cAAMc,MAAM,GAAGb,cAAf;AAEAc,QAAAA,OAAO,CAACC,GAAR,CAAY;AACRL,UAAAA,aADQ;AAERE,UAAAA,MAFQ;AAGRC,UAAAA,MAHQ;AAIRP,UAAAA;AAJQ,SAAZ;AAMH,OApBD;AAqBH,KAxBD;AAyBH,GA1BD;;AA4BArB,EAAAA,SAAS,CAACM,SAAD,EAAY,EAAZ,CAAT;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAnCD;;GAAMF,I;;KAAAA,I;;AAqCN,SAASe,OAAT,CAAiBY,KAAjB,EAAwB;AACpB,MAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,MAAiCC,cAAjC;AAAA,MAAiDC,WAAjD;;AAEA,SAAO,MAAMH,YAAb,EAA2B;AAEzBG,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,IAAAA,YAAY,IAAI,CAAhB;AACAE,IAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,IAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,IAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AAED,SAAOH,KAAP;AACH;;AAED,eAAe3B,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { apiHost } from 'axios';\nimport mapIdxToLetter from 'utils/mapIdxToLetter';\n\nconst Temp = () => {\n\n    const url = \"https://opentdb.com/api.php?amount=10\";\n\n    const fetchQuiz = () => {\n        axios.get(url).then(res => {\n            const quiz = res.data.results;\n            \n            quiz.forEach((question, questionNumber) => {\n                let answers = [...question.incorrect_answers, question.correct_answer];\n                answers = shuffle(answers);\n                answers = answers.map((answer, idx) => {\n                    return {\n                        body: answer,\n                        letter: mapIdxToLetter(idx)\n                    }\n                })\n\n                const correctAnswer = answers.find(answer => answer.body === question.correct_answer).letter;\n                const prompt = question.question;\n                const number = questionNumber;\n\n                console.log({\n                    correctAnswer,\n                    prompt,\n                    number,\n                    answer\n                });\n            })\n        })\n    }\n\n    useEffect(fetchQuiz, []);\n\n    return <div>Hello</div>\n}\n\nfunction shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    while (0 !== currentIndex) {\n  \n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n}\n \nexport default Temp;"]},"metadata":{},"sourceType":"module"}