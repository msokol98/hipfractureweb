{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/hoc/protectedRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      return user ? /*#__PURE__*/_jsxDEV(Component, {\n        member: user,\n        ...rest,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 78\n      }, this);\n      /* if (user) {\n          return <Component member={user} {...rest} {...props} />\n      } else {\n          window.location = 'login';\n      }*/\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 1\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/hoc/protectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","component","Component","rest","props","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D,sBACJ,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,MAAM,EACfC,KAAK,IAAI;AACL,aAAOC,IAAI,gBAAG,QAAC,SAAD;AAAW,QAAA,MAAM,EAAEA,IAAnB;AAAA,WAA6BF,IAA7B;AAAA,WAAuCC;AAAvC;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAsD,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAjE;AAEA;AACZ;AACA;AACA;AACA;AACS;AATT;AAAA;AAAA;AAAA;AAAA,UADI;AAaH,CAdD;;KAAMJ,c;AAiBN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n    return(\n<Route {...rest} render={\n        props => {\n            return user ? <Component member={user} {...rest} {...props} /> : <Redirect to=\"/login\" />\n\n            /* if (user) {\n                return <Component member={user} {...rest} {...props} />\n            } else {\n                window.location = 'login';\n            }*/\n        }\n    } />\n    )\n}\n\n\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}