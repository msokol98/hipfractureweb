{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/hoc/protectedRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => {\n    return user ? /*#__PURE__*/_jsxDEV(Component, {\n      member: user,\n      ...rest,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 78\n    }, this);\n    /* if (user) {\n        return <Component member={user} {...rest} {...props} />\n    } else {\n        window.location = 'login';\n    }*/\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 5\n}, this);\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/hoc/protectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","component","Component","rest","props","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBACnB,QAAC,KAAD,OAAWA,IAAX;AAAiB,EAAA,MAAM,EACnBC,KAAK,IAAI;AACL,WAAOC,IAAI,gBAAG,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEA,IAAnB;AAAA,SAA6BF,IAA7B;AAAA,SAAuCC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAsD,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAjE;AAEA;AACZ;AACA;AACA;AACA;AACS;AATL;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMJ,c;AAeN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={\n        props => {\n            return user ? <Component member={user} {...rest} {...props} /> : <Redirect to=\"/login\" />\n\n            /* if (user) {\n                return <Component member={user} {...rest} {...props} />\n            } else {\n                window.location = 'login';\n            }*/\n        }\n    } />\n)\n\n\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}