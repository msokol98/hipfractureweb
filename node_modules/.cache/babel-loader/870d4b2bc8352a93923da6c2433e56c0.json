{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/portal/PortalContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { apiHost } from 'config.js';\nimport Portal from './Portal';\n\nconst PortalContainer = () => {\n  _s();\n\n  const [createdQuizzes, setCreatedQuizzes] = useState([]),\n        jwt = localStorage.getItem('jwt');\n\n  const getUsersQuizzes = () => {\n    axios.get(`${apiHost}/api/quizzes/created`, {\n      headers: {\n        'Authorization': `Bearer ${jwt}`\n      }\n    }).then(res => {\n      setCreatedQuizzes(res.data);\n    });\n  };\n\n  useEffect(getUsersQuizzes, [jwt]);\n\n  const deleteQuiz = quiz => {\n    const id = quiz.id;\n    axios.delete(`${apiHost}/quizzes/${id}`, {\n      headers: 'Authorization'\n    }).then(() => {\n      const updatedQuizzes = createdQuizzes.filter(quiz => quiz.id !== id);\n      setCreatedQuizzes(updatedQuizzes);\n    });\n  };\n\n  const addQuestions = quiz => {\n    window.location = `/create?quizId=${quiz.id}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Portal, {\n    createdQuizzes: createdQuizzes,\n    deleteQuiz: deleteQuiz,\n    addQuestions: addQuestions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n};\n\n_s(PortalContainer, \"KEMJKkDy5f2/6ePcpRjc+75ZGcs=\");\n\n_c = PortalContainer;\nexport default PortalContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortalContainer\");","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/portal/PortalContainer.js"],"names":["React","useState","useEffect","axios","apiHost","Portal","PortalContainer","createdQuizzes","setCreatedQuizzes","jwt","localStorage","getItem","getUsersQuizzes","get","headers","then","res","data","deleteQuiz","quiz","id","delete","updatedQuizzes","filter","addQuestions","window","location"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AAAA,QAA0DQ,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAhE;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC1BT,IAAAA,KAAK,CAACU,GAAN,CAAW,GAAET,OAAQ,sBAArB,EAA4C;AACxCU,MAAAA,OAAO,EAAE;AAAE,yBAAkB,UAASL,GAAI;AAAjC;AAD+B,KAA5C,EAEGM,IAFH,CAEQC,GAAG,IAAI;AACXR,MAAAA,iBAAiB,CAACQ,GAAG,CAACC,IAAL,CAAjB;AACH,KAJD;AAKH,GAND;;AAQAf,EAAAA,SAAS,CAACU,eAAD,EAAkB,CAACH,GAAD,CAAlB,CAAT;;AAEA,QAAMS,UAAU,GAAGC,IAAI,IAAI;AAEvB,UAAMC,EAAE,GAAGD,IAAI,CAACC,EAAhB;AAEAjB,IAAAA,KAAK,CAACkB,MAAN,CAAc,GAAEjB,OAAQ,YAAWgB,EAAG,EAAtC,EAAyC;AACrCN,MAAAA,OAAO,EAAE;AAD4B,KAAzC,EAEGC,IAFH,CAEQ,MAAM;AACV,YAAMO,cAAc,GAAGf,cAAc,CAACgB,MAAf,CAAsBJ,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAA1C,CAAvB;AACAZ,MAAAA,iBAAiB,CAACc,cAAD,CAAjB;AACH,KALD;AAMH,GAVD;;AAYA,QAAME,YAAY,GAAGL,IAAI,IAAI;AACzBM,IAAAA,MAAM,CAACC,QAAP,GAAmB,kBAAiBP,IAAI,CAACC,EAAG,EAA5C;AACH,GAFD;;AAIA,sBAAO,QAAC,MAAD;AAAQ,IAAA,cAAc,EAAEb,cAAxB;AAAwC,IAAA,UAAU,EAAEW,UAApD;AAAgE,IAAA,YAAY,EAAEM;AAA9E;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CAhCD;;GAAMlB,e;;KAAAA,e;AAkCN,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { apiHost } from 'config.js';\nimport Portal from './Portal';\n\nconst PortalContainer = () => {\n\n    const [createdQuizzes, setCreatedQuizzes] = useState([]), jwt = localStorage.getItem('jwt');\n\n    const getUsersQuizzes = () => {\n        axios.get(`${apiHost}/api/quizzes/created`, {\n            headers: { 'Authorization': `Bearer ${jwt}` }\n        }).then(res => {\n            setCreatedQuizzes(res.data)\n        })\n    }\n\n    useEffect(getUsersQuizzes, [jwt]);\n\n    const deleteQuiz = quiz => {\n\n        const id = quiz.id;\n\n        axios.delete(`${apiHost}/quizzes/${id}`, {\n            headers: 'Authorization'\n        }).then(() => {\n            const updatedQuizzes = createdQuizzes.filter(quiz => quiz.id !== id);\n            setCreatedQuizzes(updatedQuizzes);\n        })\n    }\n\n    const addQuestions = quiz => {\n        window.location = `/create?quizId=${quiz.id}`\n    }\n    \n    return <Portal createdQuizzes={createdQuizzes} deleteQuiz={deleteQuiz} addQuestions={addQuestions} />\n\n}\n\nexport default PortalContainer;"]},"metadata":{},"sourceType":"module"}