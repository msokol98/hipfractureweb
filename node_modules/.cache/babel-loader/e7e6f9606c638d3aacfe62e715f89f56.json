{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/create/quizCreationFormContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport QuizCreationForm from './quizCreationForm';\nimport postToServer from 'utils/postToServer';\nimport putToServer from 'utils/patchToServer';\nimport { webHost } from 'config';\nimport getQuizFromServer from 'utils/getQuizFromServer';\n\nconst QuizCreationFormContainer = () => {\n  _s();\n\n  const [topic, setTopic] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [addingQuestion, setAddingQuestion] = useState(true);\n  const quizId = new URLSearchParams(window.location.search).get('quizId');\n\n  const getQuiz = () => {\n    if (quizId) {\n      getQuizFromServer(quizId).then(response => {\n        const quiz = response.data;\n        setTopic(quiz.topic);\n        setQuestions(quiz.questions);\n        window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: 'smooth'\n        });\n      }).catch(() => {\n        window.location = '/404';\n      });\n    }\n  };\n\n  const addQuestion = () => {\n    setAddingQuestion(true);\n  };\n\n  const submitQuestion = newQuestion => {\n    questions.push(newQuestion);\n    setAddingQuestion(false);\n  };\n\n  const submitQuiz = event => {\n    event.preventDefault();\n    if (!isValid()) return;\n    const serverCall = quizId ? putToServer : postToServer,\n          path = quizId ? `api/quizzes/${quizId}` : \"api/quizzes\";\n    serverCall(path, {\n      topic,\n      questions\n    }).then(res => {\n      const quizId = res.data;\n      alert(`You and your friends can take the quiz at ${webHost}/quizzes/${quizId}`);\n      window.location = '/portal';\n    });\n  };\n\n  const isValid = () => {\n    if (questions.length <\n    /*3*/\n    1) {\n      alert(\"Please provide at least three questions\");\n      return false;\n    }\n\n    if (!topic || topic === \"\") {\n      alert(\"Please provide a topic.\");\n    }\n\n    return true;\n  };\n\n  useEffect(getQuiz, [quizId]);\n  return /*#__PURE__*/_jsxDEV(QuizCreationForm, {\n    topic: topic,\n    setTopic: setTopic,\n    questions: questions,\n    addingQuestion: addingQuestion,\n    addQuestion: addQuestion,\n    submitQuestion: submitQuestion,\n    submitQuiz: submitQuiz,\n    editing: quizId !== null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuizCreationFormContainer, \"1+JebYjvzkh7Egu3iwrZ42ftfl8=\");\n\n_c = QuizCreationFormContainer;\nexport default QuizCreationFormContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizCreationFormContainer\");","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/create/quizCreationFormContainer.js"],"names":["React","useState","useEffect","QuizCreationForm","postToServer","putToServer","webHost","getQuizFromServer","QuizCreationFormContainer","topic","setTopic","questions","setQuestions","addingQuestion","setAddingQuestion","quizId","URLSearchParams","window","location","search","get","getQuiz","then","response","quiz","data","scrollTo","top","document","body","scrollHeight","behavior","catch","addQuestion","submitQuestion","newQuestion","push","submitQuiz","event","preventDefault","isValid","serverCall","path","res","alert","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport QuizCreationForm from './quizCreationForm';\nimport postToServer from 'utils/postToServer';\nimport putToServer from 'utils/patchToServer';\nimport { webHost } from 'config';\nimport getQuizFromServer from 'utils/getQuizFromServer';\n\nconst QuizCreationFormContainer = () => {\n\n    const [topic, setTopic] = useState(\"\");\n    const [questions, setQuestions] = useState([]);\n    const [addingQuestion, setAddingQuestion] = useState(true);\n\n    const quizId = new URLSearchParams(window.location.search).get('quizId');\n\n    const getQuiz = () => {\n        if(quizId) {\n            getQuizFromServer(quizId).then(response => {\n                const quiz = response.data;\n                setTopic(quiz.topic);\n                setQuestions(quiz.questions);\n                window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' })\n            }).catch(() => {\n                window.location = '/404';\n            })\n        }\n    }\n\n    const addQuestion = () => {\n        setAddingQuestion(true);\n    }\n\n    const submitQuestion = newQuestion => {\n        questions.push(newQuestion);\n        setAddingQuestion(false);\n    }\n\n    const submitQuiz = event => {\n        event.preventDefault();\n\n        if(!isValid())\n            return;\n\n        const serverCall = quizId ? putToServer : postToServer, path = quizId ? `api/quizzes/${quizId}` : \"api/quizzes\"\n        \n        serverCall(path, { topic, questions }).then(res => {\n            const quizId = res.data;\n            alert(`You and your friends can take the quiz at ${webHost}/quizzes/${quizId}`);\n            window.location = '/portal';\n        });\n\n    }\n\n    const isValid = () => {\n        if(questions.length < /*3*/ 1) {\n            alert(\"Please provide at least three questions\");\n            return false;\n        }\n\n        if(!topic || topic === \"\") {\n            alert(\"Please provide a topic.\")\n        }\n\n        return true;\n    }\n\n    useEffect(getQuiz, [quizId]);\n\n    return(\n        <QuizCreationForm\n            topic={topic}\n            setTopic={setTopic}\n            questions={questions}\n            addingQuestion={addingQuestion}\n            addQuestion={addQuestion}\n            submitQuestion={submitQuestion}\n            submitQuiz={submitQuiz}\n            editing={quizId !== null}\n        />\n    )\n}\n \nexport default QuizCreationFormContainer;"]},"metadata":{},"sourceType":"module"}