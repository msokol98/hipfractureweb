{"ast":null,"code":"import _slicedToArray from\"/home/msokol/Projects/quizmaker/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState}from'react';import QuizCreationForm from'./quizCreationForm';import postToServer from'utils/postToServer';import{webHost}from'config';var QuizCreationFormContainer=function QuizCreationFormContainer(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),topic=_useState2[0],setTopic=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,1),questions=_useState4[0];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),addingQuestion=_useState6[0],setAddingQuestion=_useState6[1];var addQuestion=function addQuestion(){setAddingQuestion(true);};var submitQuestion=function submitQuestion(newQuestion){questions.push(newQuestion);setAddingQuestion(false);};var submitQuiz=function submitQuiz(event){event.preventDefault();if(!isValid())return;postToServer(\"api/quizzes\",{topic:topic,questions:questions}).then(function(res){var quizId=res.data;alert(\"You and your friends can take the quiz at \".concat(webHost,\"/quizzes/\").concat(quizId));window.location='/portal';});};var isValid=function isValid(){if(questions.length</*3*/1){alert(\"Please provide at least three questions\");return false;}return true;};return/*#__PURE__*/_jsx(QuizCreationForm,{topic:topic,setTopic:setTopic,questions:questions,addingQuestion:addingQuestion,addQuestion:addQuestion,submitQuestion:submitQuestion,submitQuiz:submitQuiz});};export default QuizCreationFormContainer;","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/create/quizCreationFormContainer.js"],"names":["React","useState","QuizCreationForm","postToServer","webHost","QuizCreationFormContainer","topic","setTopic","questions","addingQuestion","setAddingQuestion","addQuestion","submitQuestion","newQuestion","push","submitQuiz","event","preventDefault","isValid","then","res","quizId","data","alert","window","location","length"],"mappings":"qMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,CACA,OAASC,OAAT,KAAwB,QAAxB,CAEA,GAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,EAAM,eAEVJ,QAAQ,CAAC,EAAD,CAFE,wCAE7BK,KAF6B,eAEtBC,QAFsB,8BAGhBN,QAAQ,CAAC,EAAD,CAHQ,yCAG7BO,SAH6B,8BAIQP,QAAQ,CAAC,IAAD,CAJhB,yCAI7BQ,cAJ6B,eAIbC,iBAJa,eAMpC,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBD,iBAAiB,CAAC,IAAD,CAAjB,CACH,CAFD,CAIA,GAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,WAAW,CAAI,CAClCL,SAAS,CAACM,IAAV,CAAeD,WAAf,EACAH,iBAAiB,CAAC,KAAD,CAAjB,CACH,CAHD,CAKA,GAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CACxBA,KAAK,CAACC,cAAN,GAEA,GAAG,CAACC,OAAO,EAAX,CACI,OAEJf,YAAY,CAAC,aAAD,CAAgB,CAAEG,KAAK,CAALA,KAAF,CAASE,SAAS,CAATA,SAAT,CAAhB,CAAZ,CAAkDW,IAAlD,CAAuD,SAAAC,GAAG,CAAI,CAC1D,GAAMC,CAAAA,MAAM,CAAGD,GAAG,CAACE,IAAnB,CACAC,KAAK,qDAA8CnB,OAA9C,qBAAiEiB,MAAjE,EAAL,CACAG,MAAM,CAACC,QAAP,CAAkB,SAAlB,CACH,CAJD,EAKH,CAXD,CAaA,GAAMP,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,GAAGV,SAAS,CAACkB,MAAV,CAAmB,KAAM,CAA5B,CAA+B,CAC3BH,KAAK,CAAC,yCAAD,CAAL,CACA,MAAO,MAAP,CACH,CAED,MAAO,KAAP,CACH,CAPD,CASA,mBACI,KAAC,gBAAD,EACI,KAAK,CAAEjB,KADX,CAEI,QAAQ,CAAEC,QAFd,CAGI,SAAS,CAAEC,SAHf,CAII,cAAc,CAAEC,cAJpB,CAKI,WAAW,CAAEE,WALjB,CAMI,cAAc,CAAEC,cANpB,CAOI,UAAU,CAAEG,UAPhB,EADJ,CAWH,CAhDD,CAkDA,cAAeV,CAAAA,yBAAf","sourcesContent":["import React, { useState } from 'react';\nimport QuizCreationForm from './quizCreationForm';\nimport postToServer from 'utils/postToServer';\nimport { webHost } from 'config';\n\nconst QuizCreationFormContainer = () => {\n    \n    const [topic, setTopic] = useState(\"\");\n    const [questions] = useState([]);\n    const [addingQuestion, setAddingQuestion] = useState(true);\n\n    const addQuestion = () => {\n        setAddingQuestion(true);\n    }\n\n    const submitQuestion = newQuestion => {\n        questions.push(newQuestion);\n        setAddingQuestion(false);\n    }\n\n    const submitQuiz = event => {\n        event.preventDefault();\n\n        if(!isValid())\n            return;\n\n        postToServer(\"api/quizzes\", { topic, questions }).then(res => {\n            const quizId = res.data;\n            alert(`You and your friends can take the quiz at ${webHost}/quizzes/${quizId}`);\n            window.location = '/portal';\n        })\n    }\n\n    const isValid = () => {\n        if(questions.length < /*3*/ 1) {\n            alert(\"Please provide at least three questions\");\n            return false;\n        }\n\n        return true;\n    }\n\n    return(\n        <QuizCreationForm\n            topic={topic}\n            setTopic={setTopic}\n            questions={questions}\n            addingQuestion={addingQuestion}\n            addQuestion={addQuestion}\n            submitQuestion={submitQuestion}\n            submitQuiz={submitQuiz}\n        />\n    )\n}\n \nexport default QuizCreationFormContainer;"]},"metadata":{},"sourceType":"module"}