{"ast":null,"code":"import _slicedToArray from\"/home/mitchell/Projects/hip-fracture-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import QuizCreationForm from'./quizCreationForm';import postToServer from'utils/postToServer';import putToServer from'utils/patchToServer';import{webHost}from'config';import getQuizFromServer from'utils/getQuizFromServer';var QuizCreationFormContainer=function QuizCreationFormContainer(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),topic=_useState2[0],setTopic=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),questions=_useState4[0],setQuestions=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),addingQuestion=_useState6[0],setAddingQuestion=_useState6[1];var quizId=new URLSearchParams(window.location.search).get('quizId');var getQuiz=function getQuiz(){if(quizId){getQuizFromServer(quizId).then(function(response){var quiz=response.data;setTopic(quiz.topic);setQuestions(quiz.questions);window.scrollTo({top:document.body.scrollHeight,behavior:'smooth'});}).catch(function(){window.location='/404';});}};var addQuestion=function addQuestion(){setAddingQuestion(true);};var submitQuestion=function submitQuestion(newQuestion){questions.push(newQuestion);setAddingQuestion(false);};var submitQuiz=function submitQuiz(event){event.preventDefault();if(!isValid())return;var serverCall=quizId?putToServer:postToServer,path=quizId?\"api/quizzes/\".concat(quizId):\"api/quizzes\";serverCall(path,{topic:topic,questions:questions}).then(function(res){var quizId=res.data;alert(\"You and your friends can take the quiz at \".concat(webHost,\"/quizzes/\").concat(quizId));window.location='/portal';});};var isValid=function isValid(){if(questions.length</*3*/1){alert(\"Please provide at least three questions\");return false;}if(!topic||topic===\"\"){alert(\"Please select a topic.\");return false;}return true;};useEffect(getQuiz,[quizId]);return/*#__PURE__*/_jsx(QuizCreationForm,{topic:topic,setTopic:setTopic,questions:questions,addingQuestion:addingQuestion,addQuestion:addQuestion,submitQuestion:submitQuestion,submitQuiz:submitQuiz,editing:quizId!==null});};export default QuizCreationFormContainer;","map":{"version":3,"sources":["/home/mitchell/Projects/hip-fracture-web/src/components/create/quizCreationFormContainer.js"],"names":["React","useState","useEffect","QuizCreationForm","postToServer","putToServer","webHost","getQuizFromServer","QuizCreationFormContainer","topic","setTopic","questions","setQuestions","addingQuestion","setAddingQuestion","quizId","URLSearchParams","window","location","search","get","getQuiz","then","response","quiz","data","scrollTo","top","document","body","scrollHeight","behavior","catch","addQuestion","submitQuestion","newQuestion","push","submitQuiz","event","preventDefault","isValid","serverCall","path","res","alert","length"],"mappings":"0MAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,OAASC,OAAT,KAAwB,QAAxB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,yBAA9B,CAEA,GAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,EAAM,eAEVP,QAAQ,CAAC,EAAD,CAFE,wCAE7BQ,KAF6B,eAEtBC,QAFsB,8BAGFT,QAAQ,CAAC,EAAD,CAHN,yCAG7BU,SAH6B,eAGlBC,YAHkB,8BAIQX,QAAQ,CAAC,IAAD,CAJhB,yCAI7BY,cAJ6B,eAIbC,iBAJa,eAMpC,GAAMC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,EAA4CC,GAA5C,CAAgD,QAAhD,CAAf,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,GAAGN,MAAH,CAAW,CACPR,iBAAiB,CAACQ,MAAD,CAAjB,CAA0BO,IAA1B,CAA+B,SAAAC,QAAQ,CAAI,CACvC,GAAMC,CAAAA,IAAI,CAAGD,QAAQ,CAACE,IAAtB,CACAf,QAAQ,CAACc,IAAI,CAACf,KAAN,CAAR,CACAG,YAAY,CAACY,IAAI,CAACb,SAAN,CAAZ,CACAM,MAAM,CAACS,QAAP,CAAgB,CAAEC,GAAG,CAAEC,QAAQ,CAACC,IAAT,CAAcC,YAArB,CAAmCC,QAAQ,CAAE,QAA7C,CAAhB,EACH,CALD,EAKGC,KALH,CAKS,UAAM,CACXf,MAAM,CAACC,QAAP,CAAkB,MAAlB,CACH,CAPD,EAQH,CACJ,CAXD,CAaA,GAAMe,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBnB,iBAAiB,CAAC,IAAD,CAAjB,CACH,CAFD,CAIA,GAAMoB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,WAAW,CAAI,CAClCxB,SAAS,CAACyB,IAAV,CAAeD,WAAf,EACArB,iBAAiB,CAAC,KAAD,CAAjB,CACH,CAHD,CAKA,GAAMuB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CACxBA,KAAK,CAACC,cAAN,GAEA,GAAG,CAACC,OAAO,EAAX,CACI,OAEJ,GAAMC,CAAAA,UAAU,CAAG1B,MAAM,CAAGV,WAAH,CAAiBD,YAA1C,CAAwDsC,IAAI,CAAG3B,MAAM,uBAAkBA,MAAlB,EAA6B,aAAlG,CAEA0B,UAAU,CAACC,IAAD,CAAO,CAAEjC,KAAK,CAALA,KAAF,CAASE,SAAS,CAATA,SAAT,CAAP,CAAV,CAAuCW,IAAvC,CAA4C,SAAAqB,GAAG,CAAI,CAC/C,GAAM5B,CAAAA,MAAM,CAAG4B,GAAG,CAAClB,IAAnB,CACAmB,KAAK,qDAA8CtC,OAA9C,qBAAiES,MAAjE,EAAL,CACAE,MAAM,CAACC,QAAP,CAAkB,SAAlB,CACH,CAJD,EAMH,CAdD,CAgBA,GAAMsB,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,GAAG7B,SAAS,CAACkC,MAAV,CAAmB,KAAM,CAA5B,CAA+B,CAC3BD,KAAK,CAAC,yCAAD,CAAL,CACA,MAAO,MAAP,CACH,CAED,GAAG,CAACnC,KAAD,EAAUA,KAAK,GAAK,EAAvB,CAA2B,CACvBmC,KAAK,CAAC,wBAAD,CAAL,CACA,MAAO,MAAP,CACH,CAED,MAAO,KAAP,CACH,CAZD,CAcA1C,SAAS,CAACmB,OAAD,CAAU,CAACN,MAAD,CAAV,CAAT,CAEA,mBACI,KAAC,gBAAD,EACI,KAAK,CAAEN,KADX,CAEI,QAAQ,CAAEC,QAFd,CAGI,SAAS,CAAEC,SAHf,CAII,cAAc,CAAEE,cAJpB,CAKI,WAAW,CAAEoB,WALjB,CAMI,cAAc,CAAEC,cANpB,CAOI,UAAU,CAAEG,UAPhB,CAQI,OAAO,CAAEtB,MAAM,GAAK,IARxB,EADJ,CAYH,CA1ED,CA4EA,cAAeP,CAAAA,yBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport QuizCreationForm from './quizCreationForm';\nimport postToServer from 'utils/postToServer';\nimport putToServer from 'utils/patchToServer';\nimport { webHost } from 'config';\nimport getQuizFromServer from 'utils/getQuizFromServer';\n\nconst QuizCreationFormContainer = () => {\n\n    const [topic, setTopic] = useState(\"\");\n    const [questions, setQuestions] = useState([]);\n    const [addingQuestion, setAddingQuestion] = useState(true);\n\n    const quizId = new URLSearchParams(window.location.search).get('quizId');\n\n    const getQuiz = () => {\n        if(quizId) {\n            getQuizFromServer(quizId).then(response => {\n                const quiz = response.data;\n                setTopic(quiz.topic);\n                setQuestions(quiz.questions);\n                window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' })\n            }).catch(() => {\n                window.location = '/404';\n            })\n        }\n    }\n\n    const addQuestion = () => {\n        setAddingQuestion(true);\n    }\n\n    const submitQuestion = newQuestion => {\n        questions.push(newQuestion);\n        setAddingQuestion(false);\n    }\n\n    const submitQuiz = event => {\n        event.preventDefault();\n\n        if(!isValid())\n            return;\n\n        const serverCall = quizId ? putToServer : postToServer, path = quizId ? `api/quizzes/${quizId}` : \"api/quizzes\"\n        \n        serverCall(path, { topic, questions }).then(res => {\n            const quizId = res.data;\n            alert(`You and your friends can take the quiz at ${webHost}/quizzes/${quizId}`);\n            window.location = '/portal';\n        });\n\n    }\n\n    const isValid = () => {\n        if(questions.length < /*3*/ 1) {\n            alert(\"Please provide at least three questions\");\n            return false;\n        }\n\n        if(!topic || topic === \"\") {\n            alert(\"Please select a topic.\");\n            return false;\n        }\n\n        return true;\n    }\n\n    useEffect(getQuiz, [quizId]);\n\n    return(\n        <QuizCreationForm\n            topic={topic}\n            setTopic={setTopic}\n            questions={questions}\n            addingQuestion={addingQuestion}\n            addQuestion={addQuestion}\n            submitQuestion={submitQuestion}\n            submitQuiz={submitQuiz}\n            editing={quizId !== null}\n        />\n    )\n}\n \nexport default QuizCreationFormContainer;"]},"metadata":{},"sourceType":"module"}