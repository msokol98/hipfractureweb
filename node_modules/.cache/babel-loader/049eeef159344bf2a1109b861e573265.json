{"ast":null,"code":"import _toConsumableArray from\"/home/mitchell/Projects/hip-fracture-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect}from'react';import axios from'axios';import mapIdxToLetter from'utils/mapIdxToLetter';import postToServer from'utils/postToServer';var Temp=function Temp(){var fetchQuiz=function fetchQuiz(categoryName,categoryId){var url=\"https://opentdb.com/api.php?amount=10&difficulty=easy&category=\".concat(categoryId);axios.get(url).then(function(res){var quiz=res.data.results;var questions=quiz.map(function(question,questionNumber){var answers=[].concat(_toConsumableArray(question.incorrect_answers),[question.correct_answer]);answers=shuffle(answers);var answerChoices=answers.map(function(answer,idx){return{body:answer,letter:mapIdxToLetter(idx)};});var correctAnswer=answerChoices.find(function(answer){return answer.body===question.correct_answer;}).letter;var prompt=question.question;var number=questionNumber+1;return{correctAnswer:correctAnswer,prompt:prompt,number:number,answerChoices:answerChoices};});var submissionQuiz={questions:questions,topic:categoryName};console.log(submissionQuiz);postToServer(\"api/quizzes\",submissionQuiz).then(function(res){console.log(res);});});};var generateQuizzes=function generateQuizzes(){for(var i=0;i<50;i++){axios.get(\"https://opentdb.com/api_category.php\").then(function(res){var categories=res.data.trivia_categories;var randomCategory=categories[Math.floor(Math.random()*categories.length)];var id=randomCategory.id,name=randomCategory.name;fetchQuiz(name,id);});}};useEffect(generateQuizzes,[]);return/*#__PURE__*/_jsx(\"div\",{children:\"Hello\"});};function shuffle(array){var currentIndex=array.length,temporaryValue,randomIndex;while(0!==currentIndex){randomIndex=Math.floor(Math.random()*currentIndex);currentIndex-=1;temporaryValue=array[currentIndex];array[currentIndex]=array[randomIndex];array[randomIndex]=temporaryValue;}return array;}export default Temp;","map":{"version":3,"sources":["/home/mitchell/Projects/hip-fracture-web/src/components/temp.js"],"names":["React","useEffect","axios","mapIdxToLetter","postToServer","Temp","fetchQuiz","categoryName","categoryId","url","get","then","res","quiz","data","results","questions","map","question","questionNumber","answers","incorrect_answers","correct_answer","shuffle","answerChoices","answer","idx","body","letter","correctAnswer","find","prompt","number","submissionQuiz","topic","console","log","generateQuizzes","i","categories","trivia_categories","randomCategory","Math","floor","random","length","id","name","array","currentIndex","temporaryValue","randomIndex"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport mapIdxToLetter from 'utils/mapIdxToLetter';\nimport postToServer from 'utils/postToServer';\n\nconst Temp = () => {\n\n    const fetchQuiz = (categoryName, categoryId) => {\n\n        const url = `https://opentdb.com/api.php?amount=10&difficulty=easy&category=${categoryId}`;\n\n        axios.get(url).then(res => {\n            const quiz = res.data.results;\n            \n            const questions = quiz.map((question, questionNumber) => {\n                let answers = [...question.incorrect_answers, question.correct_answer];\n                answers = shuffle(answers);\n                const answerChoices = answers.map((answer, idx) => {\n                    return {\n                        body: answer,\n                        letter: mapIdxToLetter(idx)\n                    }\n                })\n\n                const correctAnswer = answerChoices.find(answer => answer.body === question.correct_answer).letter;\n                const prompt = question.question;\n                const number = questionNumber + 1;\n\n                return {\n                    correctAnswer,\n                    prompt,\n                    number,\n                    answerChoices\n                };\n            })\n\n            const submissionQuiz = {questions, topic: categoryName};\n\n            console.log(submissionQuiz)\n\n            postToServer(\"api/quizzes\", submissionQuiz).then(res => {\n                console.log(res)\n            })\n        })\n    }\n\n    const generateQuizzes = () => {\n        for (let i = 0; i < 50; i++) {\n            axios.get(\"https://opentdb.com/api_category.php\").then(res => {\n                const categories = res.data.trivia_categories;\n                const randomCategory = categories[Math.floor(Math.random() * categories.length)];\n                const { id, name } = randomCategory;\n                fetchQuiz(name, id);\n            })\n        }\n    }\n\n    useEffect(generateQuizzes, []);\n\n    return <div>Hello</div>\n}\n\nfunction shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    while (0 !== currentIndex) {\n  \n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n}\n \nexport default Temp;"]},"metadata":{},"sourceType":"module"}