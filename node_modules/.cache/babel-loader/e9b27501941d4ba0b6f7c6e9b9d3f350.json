{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/create/newQuestion.js\";\nimport React, { Component } from 'react';\nimport AnswerChoice from './answerChoice';\nimport mapIdxToLetter from 'utils/mapIdxToLetter';\nimport './styles.css';\n\nclass NewQuestion extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionPrompt: \"\",\n      answerChoices: [\"\", \"\", \"\", \"\"]\n    };\n\n    this.removeAnswer = deletionIdx => {\n      const remainingAnswers = this.state.answerChoices.filter((_, idx) => idx !== deletionIdx);\n      if (remainingAnswers.length < 2) alert(\"There must be more than one answer choice.\");else this.setState({\n        answerChoices: remainingAnswers\n      });\n    };\n\n    this.addAnswer = () => {\n      this.setState({\n        answerChoices: [...this.state.answerChoices, \"\"]\n      });\n    };\n\n    this.handleChange = event => {\n      const name = event.target.name,\n            value = event.target.value;\n\n      if (name === \"questionPrompt\") {\n        this.setState({\n          questionPrompt: value\n        });\n      } else {\n        const {\n          answerChoices\n        } = this.state,\n              idx = name;\n        answerChoices[idx] = value;\n        this.setState({\n          answerChoices\n        });\n      }\n    };\n\n    this.setCorrectAnswer = idx => {\n      console.log(correctAnswer);\n      this.setState({\n        correctAnswerIdx: mapIdxToLetter(idx)\n      });\n    };\n  }\n\n  render() {\n    const {\n      questionPrompt,\n      answerChoices\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Question \", this.props.number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"has-text-grey\",\n        children: \"Click radio button to denote the correct answer...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new-question-prompt input\",\n        type: \"text\",\n        placeholder: \"Add a question... e.g. What is the capital of Japan?\",\n        value: questionPrompt,\n        name: \"questionPrompt\",\n        onChange: e => this.handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), answerChoices.map((answerChoice, idx) => /*#__PURE__*/_jsxDEV(AnswerChoice, {\n        value: answerChoice,\n        idx: idx,\n        remove: this.removeAnswer,\n        onChange: this.handleChange,\n        placeholder: `Answer ${mapIdxToLetter(idx)}`,\n        setCorrectAnswer: true\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this)), answerChoices.length < 4 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: this.addAnswer,\n        children: \"Add Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-info\",\n        onClick: () => this.props.submitQuestion(this.state),\n        children: \"Submit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default NewQuestion;","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/create/newQuestion.js"],"names":["React","Component","AnswerChoice","mapIdxToLetter","NewQuestion","state","questionPrompt","answerChoices","removeAnswer","deletionIdx","remainingAnswers","filter","_","idx","length","alert","setState","addAnswer","handleChange","event","name","target","value","setCorrectAnswer","console","log","correctAnswer","correctAnswerIdx","render","props","number","e","map","answerChoice","submitQuestion"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AnswerChoice from './answerChoice';\nimport mapIdxToLetter from 'utils/mapIdxToLetter';\nimport './styles.css';\n\nclass NewQuestion extends Component {\n\n    state = {\n        questionPrompt: \"\",\n        answerChoices: [\"\", \"\", \"\", \"\"]\n    }\n\n    removeAnswer = deletionIdx => {\n        const remainingAnswers = this.state.answerChoices.filter((_, idx) => idx !== deletionIdx);\n\n        if(remainingAnswers.length < 2)\n            alert(\"There must be more than one answer choice.\")\n        else\n            this.setState({answerChoices: remainingAnswers});\n    }\n\n    addAnswer = () => {\n        this.setState({answerChoices: [...this.state.answerChoices, \"\"]});\n    } \n\n    handleChange = event =>  {\n        const name = event.target.name, value = event.target.value;\n\n        if(name === \"questionPrompt\") {\n            this.setState({questionPrompt: value});\n        } else {\n            const { answerChoices } = this.state, idx = name;\n            answerChoices[idx] = value;\n            this.setState({answerChoices});\n        }\n    }\n\n    setCorrectAnswer = idx => {\n        console.log(correctAnswer)\n        this.setState({correctAnswerIdx: mapIdxToLetter(idx)});\n    }\n\n    render() {\n\n        const { questionPrompt, answerChoices } = this.state;\n\n        return(\n            <div className=\"new-question\">\n\n                <h4>Question {this.props.number}</h4>\n\n                <p className=\"has-text-grey\">Click radio button to denote the correct answer...</p>\n\n                <input \n                    className=\"new-question-prompt input\" \n                    type=\"text\" \n                    placeholder=\"Add a question... e.g. What is the capital of Japan?\"\n                    value={questionPrompt}\n                    name=\"questionPrompt\" \n                    onChange={e => this.handleChange(e)}\n                />\n                \n                {answerChoices.map((answerChoice, idx) => (\n\n                        <AnswerChoice \n                            key={idx}\n                            value={answerChoice} \n                            idx={idx} \n                            remove={this.removeAnswer}\n                            onChange={this.handleChange}\n                            placeholder={`Answer ${mapIdxToLetter(idx)}`}\n                            setCorrectAnswer\n                        />\n                ))}\n\n                {answerChoices.length < 4 &&\n                    <button className=\"button\" onClick={this.addAnswer}>Add Answer</button>\n                }\n\n                <button className=\"button is-info\" onClick={() => this.props.submitQuestion(this.state)}>\n                    Submit Question\n                </button>\n\n            </div>\n        )\n    }\n}\n \nexport default NewQuestion;"]},"metadata":{},"sourceType":"module"}