{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/create/newQuestion.js\";\nimport React, { Component } from 'react';\nimport AnswerChoice from './answerChoice';\nimport './styles.css';\n\nclass NewQuestion extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionPrompt: \"\",\n      answerChoices: [\"\", \"\", \"\", \"\"]\n    };\n\n    this.remove = deletionIdx => {\n      const remainingAnswers = this.state.answerChoices.filter((_, idx) => idx !== deletionIdx);\n      if (remainingAnswers.length < 2) alert(\"There must be more than one answer choice.\");else this.setState({\n        answerChoices: remainingAnswers\n      });\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    const {\n      questionPrompt,\n      answerChoices\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new-question-prompt\",\n        type: \"text\",\n        placeholder: \"Add your question\",\n        value: questionPrompt,\n        name: \"questionPrompt\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), answerChoices.map((answerChoice, idx) => /*#__PURE__*/_jsxDEV(AnswerChoice, {\n        value: answerChoice,\n        idx: idx,\n        remove: this.remove,\n        name: `answer ${idx}`,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default NewQuestion;","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/create/newQuestion.js"],"names":["React","Component","AnswerChoice","NewQuestion","state","questionPrompt","answerChoices","remove","deletionIdx","remainingAnswers","filter","_","idx","length","alert","setState","handleChange","event","value","target","render","map","answerChoice"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,cAAP;;AAEA,MAAOC,WAAP,SAA2BF,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCG,KAFiC,GAEzB;AACJC,MAAAA,cAAc,EAAE,EADZ;AAEJC,MAAAA,aAAa,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb;AAFX,KAFyB;;AAAA,SAOjCC,MAPiC,GAOxBC,WAAW,IAAI;AACpB,YAAMC,gBAAgB,GAAG,KAAKL,KAAL,CAAWE,aAAX,CAAyBI,MAAzB,CAAgC,CAACC,CAAD,EAAIC,GAAJ,KAAYA,GAAG,KAAKJ,WAApD,CAAzB;AAEA,UAAGC,gBAAgB,CAACI,MAAjB,GAA0B,CAA7B,EACIC,KAAK,CAAC,4CAAD,CAAL,CADJ,KAGI,KAAKC,QAAL,CAAc;AAACT,QAAAA,aAAa,EAAEG;AAAhB,OAAd;AACP,KAdgC;AAAA;;AAgBjCO,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB,SAAKF,QAAL,CAAc;AAACG,MAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaD;AAArB,KAAd;AACH;;AAEDE,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEf,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAAoC,KAAKF,KAA/C;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AACI,QAAA,SAAS,EAAC,qBADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,WAAW,EAAC,mBAHhB;AAII,QAAA,KAAK,EAAEC,cAJX;AAKI,QAAA,IAAI,EAAC,gBALT;AAMI,QAAA,QAAQ,EAAE,KAAKW;AANnB;AAAA;AAAA;AAAA;AAAA,cADJ,EAUKV,aAAa,CAACe,GAAd,CAAkB,CAACC,YAAD,EAAeV,GAAf,kBAEX,QAAC,YAAD;AACI,QAAA,KAAK,EAAEU,YADX;AAEI,QAAA,GAAG,EAAEV,GAFT;AAGI,QAAA,MAAM,EAAE,KAAKL,MAHjB;AAII,QAAA,IAAI,EAAG,UAASK,GAAI,EAJxB;AAKI,QAAA,QAAQ,EAAE,KAAKI;AALnB;AAAA;AAAA;AAAA;AAAA,cAFP,CAVL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH;;AAhDgC;;AAmDrC,eAAeb,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport AnswerChoice from './answerChoice';\nimport './styles.css';\n\nclass  NewQuestion extends Component {\n\n    state = {\n        questionPrompt: \"\",\n        answerChoices: [\"\", \"\", \"\", \"\"]\n    }\n\n    remove = deletionIdx => {\n        const remainingAnswers = this.state.answerChoices.filter((_, idx) => idx !== deletionIdx);\n\n        if(remainingAnswers.length < 2)\n            alert(\"There must be more than one answer choice.\")\n        else\n            this.setState({answerChoices: remainingAnswers});\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    render() {\n\n        const { questionPrompt, answerChoices } = this.state;\n\n        return(\n            <div className=\"new-question\">\n                <input \n                    className=\"new-question-prompt\" \n                    type=\"text\" \n                    placeholder=\"Add your question\"\n                    value={questionPrompt}\n                    name=\"questionPrompt\" \n                    onChange={this.handleChange}\n                />\n                \n                {answerChoices.map((answerChoice, idx) => (\n\n                        <AnswerChoice \n                            value={answerChoice} \n                            idx={idx} \n                            remove={this.remove}\n                            name={`answer ${idx}`}\n                            onChange={this.handleChange}\n                        />\n                ))}\n\n            </div>\n        )\n    }\n}\n \nexport default NewQuestion;"]},"metadata":{},"sourceType":"module"}