{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/create/quizCreationForm.js\";\nimport React from 'react';\nimport Question from './question';\nimport NewQuestion from './newQuestion';\nimport './styles.css';\nimport autoGenerateQuiz from 'utils/autoGen';\n\nconst QuizCreationForm = ({\n  topic,\n  setTopic,\n  questions,\n  submitQuestion,\n  addQuestion,\n  addingQuestion,\n  submitQuiz,\n  editing\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"quiz-creation-form container\",\n  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n    className: \"has-text-weight-light\",\n    children: \"Topic\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    required: true,\n    type: \"text\",\n    placeholder: \"What is the quiz topic?\",\n    value: topic,\n    onChange: e => setTopic(e.target.value),\n    className: \"input quiz-topic\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this), questions.map((question, idx) => /*#__PURE__*/_jsxDEV(Question, {\n    question: question,\n    number: idx + 1\n  }, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 43\n  }, this)), addingQuestion ? /*#__PURE__*/_jsxDEV(NewQuestion, {\n    number: questions.length + 1,\n    submitQuestion: submitQuestion\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button is-info with-space-on-right\",\n      onClick: addQuestion,\n      children: \"Add New Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button is-info\",\n      onClick: submitQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this), !editing && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification is-info is-light\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Don't want to write the questions? We can make a quiz for you.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: autoGenerateQuiz,\n      className: \"button\",\n      children: \"Auto-generate a quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 22\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 5\n}, this);\n\n_c = QuizCreationForm;\nexport default QuizCreationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizCreationForm\");","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/create/quizCreationForm.js"],"names":["React","Question","NewQuestion","autoGenerateQuiz","QuizCreationForm","topic","setTopic","questions","submitQuestion","addQuestion","addingQuestion","submitQuiz","editing","e","target","value","map","question","idx","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,cAAP;AACA,OAAOC,gBAAP,MAA6B,eAA7B;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,SAAnB;AAA8BC,EAAAA,cAA9B;AAA8CC,EAAAA,WAA9C;AAA2DC,EAAAA,cAA3D;AAA2EC,EAAAA,UAA3E;AAAuFC,EAAAA;AAAvF,CAAD,kBAErB;AAAK,EAAA,SAAS,EAAC,8BAAf;AAAA,0BAEI;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,eAII;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,yBAHhB;AAII,IAAA,KAAK,EAAEP,KAJX;AAKI,IAAA,QAAQ,EAAEQ,CAAC,IAAIP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAL3B;AAMI,IAAA,SAAS,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,UAJJ,EAaKR,SAAS,CAACS,GAAV,CAAc,CAACC,QAAD,EAAWC,GAAX,kBAAmB,QAAC,QAAD;AAAoB,IAAA,QAAQ,EAAED,QAA9B;AAAwC,IAAA,MAAM,EAAEC,GAAG,GAAC;AAApD,KAAeA,GAAf;AAAA;AAAA;AAAA;AAAA,UAAjC,CAbL,EAeKR,cAAc,gBACX,QAAC,WAAD;AAAa,IAAA,MAAM,EAAEH,SAAS,CAACY,MAAV,GAAiB,CAAtC;AAAyC,IAAA,cAAc,EAAEX;AAAzD;AAAA;AAAA;AAAA;AAAA,UADW,gBAGX;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,oCAAlB;AAAuD,MAAA,OAAO,EAAEC,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAEE;AAA5C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAlBR,EAyBK,CAACC,OAAD,iBAAY;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,4BACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,eAET;AAAQ,MAAA,OAAO,EAAET,gBAAjB;AAAmC,MAAA,SAAS,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFS;AAAA;AAAA;AAAA;AAAA;AAAA,UAzBjB;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;;KAAMC,gB;AAoCN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport Question from './question';\nimport NewQuestion from './newQuestion';\nimport './styles.css';\nimport autoGenerateQuiz from 'utils/autoGen';\n\nconst QuizCreationForm = ({ topic, setTopic, questions, submitQuestion, addQuestion, addingQuestion, submitQuiz, editing }) => (\n    \n    <div className=\"quiz-creation-form container\">\n\n        <h4 className=\"has-text-weight-light\">Topic</h4>\n        \n        <input \n            required\n            type=\"text\" \n            placeholder=\"What is the quiz topic?\" \n            value={topic} \n            onChange={e => setTopic(e.target.value)} \n            className=\"input quiz-topic\" \n        />\n\n        {questions.map((question, idx) => <Question key={idx} question={question} number={idx+1} />)}\n\n        {addingQuestion ? \n            <NewQuestion number={questions.length+1} submitQuestion={submitQuestion} />\n        :\n            <div>\n                <button className=\"button is-info with-space-on-right\" onClick={addQuestion}>Add New Question</button>\n                <button className=\"button is-info\" onClick={submitQuiz}>{}</button>\n            </div>\n        }\n\n\n        {!editing && <div className=\"notification is-info is-light\">\n            <p>Don't want to write the questions? We can make a quiz for you.</p>\n            <button onClick={autoGenerateQuiz} className=\"button\">Auto-generate a quiz</button>\n        </div>}\n    </div>\n\n);\n\n \nexport default QuizCreationForm;"]},"metadata":{},"sourceType":"module"}