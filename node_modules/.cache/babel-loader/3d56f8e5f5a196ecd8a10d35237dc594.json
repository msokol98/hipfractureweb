{"ast":null,"code":"import _toConsumableArray from\"/home/mitchell/Projects/hip-fracture-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import axios from'axios';import mapIdxToLetter from'utils/mapIdxToLetter';import postToServer from'utils/postToServer';var autoGenerateQuiz=function autoGenerateQuiz(){axios.get(\"https://opentdb.com/api_category.php\").then(function(res){var categories=res.data.trivia_categories;var randomCategory=categories[Math.floor(Math.random()*categories.length)];var id=randomCategory.id,name=randomCategory.name;fetchQuiz(name,id);});};var fetchQuiz=function fetchQuiz(categoryName,categoryId){var url=\"https://opentdb.com/api.php?amount=10&difficulty=easy&category=\".concat(categoryId);axios.get(url).then(function(res){var quiz=res.data.results;if(!quiz||quiz.length===0)return autoGenerateQuiz();var questions=quiz.map(function(question,questionNumber){var answers=[].concat(_toConsumableArray(question.incorrect_answers),[question.correct_answer]);answers=shuffle(answers);var answerChoices=answers.map(function(answer,idx){return{body:answer,letter:mapIdxToLetter(idx)};});var correctAnswer=answerChoices.find(function(answer){return answer.body===question.correct_answer;}).letter;var prompt=question.question;var number=questionNumber+1;return{correctAnswer:correctAnswer,prompt:prompt,number:number,answerChoices:answerChoices};});var submissionQuiz={questions:questions,topic:categoryName};postToServer(\"api/quizzes\",submissionQuiz).then(function(res){var quizId=res.data;window.location=\"/quizzes/\".concat(quizId);});});};var shuffle=function shuffle(array){var currentIndex=array.length,temporaryValue,randomIndex;while(0!==currentIndex){randomIndex=Math.floor(Math.random()*currentIndex);currentIndex-=1;temporaryValue=array[currentIndex];array[currentIndex]=array[randomIndex];array[randomIndex]=temporaryValue;}return array;};export default autoGenerateQuiz;","map":{"version":3,"sources":["/home/mitchell/Projects/hip-fracture-web/src/utils/autoGen.js"],"names":["axios","mapIdxToLetter","postToServer","autoGenerateQuiz","get","then","res","categories","data","trivia_categories","randomCategory","Math","floor","random","length","id","name","fetchQuiz","categoryName","categoryId","url","quiz","results","questions","map","question","questionNumber","answers","incorrect_answers","correct_answer","shuffle","answerChoices","answer","idx","body","letter","correctAnswer","find","prompt","number","submissionQuiz","topic","quizId","window","location","array","currentIndex","temporaryValue","randomIndex"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport mapIdxToLetter from 'utils/mapIdxToLetter';\nimport postToServer from 'utils/postToServer';\n\nconst autoGenerateQuiz = () => {\n    axios.get(\"https://opentdb.com/api_category.php\").then(res => {\n            const categories = res.data.trivia_categories;\n            const randomCategory = categories[Math.floor(Math.random() * categories.length)];\n            const { id, name } = randomCategory;\n            fetchQuiz(name, id);\n    })\n}\n\nconst fetchQuiz = (categoryName, categoryId) => {\n\n    const url = `https://opentdb.com/api.php?amount=10&difficulty=easy&category=${categoryId}`;\n\n    axios.get(url).then(res => {\n        const quiz = res.data.results;\n\n        if(!quiz || quiz.length === 0)\n            return autoGenerateQuiz();\n        \n        const questions = quiz.map((question, questionNumber) => {\n            let answers = [...question.incorrect_answers, question.correct_answer];\n            answers = shuffle(answers);\n            const answerChoices = answers.map((answer, idx) => {\n                return {\n                    body: answer,\n                    letter: mapIdxToLetter(idx)\n                }\n            })\n\n            const correctAnswer = answerChoices.find(answer => answer.body === question.correct_answer).letter;\n            const prompt = question.question;\n            const number = questionNumber + 1;\n\n            return {\n                correctAnswer,\n                prompt,\n                number,\n                answerChoices\n            };\n        })\n\n        const submissionQuiz = {questions, topic: categoryName};\n\n\n        postToServer(\"api/quizzes\", submissionQuiz).then(res => {\n            const quizId = res.data;\n            window.location = `/quizzes/${quizId}`;\n        })\n        \n    })\n}\n\n\nconst shuffle = array => {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    while (0 !== currentIndex) {\n  \n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n}\n \nexport default autoGenerateQuiz;"]},"metadata":{},"sourceType":"module"}