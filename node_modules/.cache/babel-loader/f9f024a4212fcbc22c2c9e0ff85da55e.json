{"ast":null,"code":"import _slicedToArray from\"/home/mitchell/Projects/hip-fracture-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import getTopics from'data/getTopics';import{Typeahead}from'react-bootstrap-typeahead';var Filter=function Filter(_ref){var filterByTopic=_ref.filterByTopic;var _useState=useState([\"\"]),_useState2=_slicedToArray(_useState,2),topic=_useState2[0],setTopic=_useState2[1];useEffect(function(){if(topic.length===0)return filterByTopic(\"\");var chosenTopic=topic[0]&&topic[0].trim();if(chosenTopic)filterByTopic(chosenTopic);},[topic]);return/*#__PURE__*/_jsx(Typeahead,{id:1,onChange:function onChange(topic){return setTopic(topic);},options:getTopics(),selected:topic});};export default Filter;","map":{"version":3,"sources":["/home/mitchell/Projects/hip-fracture-web/src/components/quizzes/filter.js"],"names":["React","useState","useEffect","getTopics","Typeahead","Filter","filterByTopic","topic","setTopic","length","chosenTopic","trim"],"mappings":"0MAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,gBAAtB,CACA,OAASC,SAAT,KAA0B,2BAA1B,CAGA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAuB,IAApBC,CAAAA,aAAoB,MAApBA,aAAoB,eAERL,QAAQ,CAAC,CAAC,EAAD,CAAD,CAFA,wCAE3BM,KAF2B,eAEpBC,QAFoB,eAIlCN,SAAS,CAAC,UAAM,CACZ,GAAGK,KAAK,CAACE,MAAN,GAAiB,CAApB,CACI,MAAOH,CAAAA,aAAa,CAAC,EAAD,CAApB,CAEJ,GAAMI,CAAAA,WAAW,CAAGH,KAAK,CAAC,CAAD,CAAL,EAAYA,KAAK,CAAC,CAAD,CAAL,CAASI,IAAT,EAAhC,CAEA,GAAGD,WAAH,CACIJ,aAAa,CAACI,WAAD,CAAb,CAEP,CATQ,CASN,CAACH,KAAD,CATM,CAAT,CAWA,mBACI,KAAC,SAAD,EACI,EAAE,CAAE,CADR,CAEI,QAAQ,CAAE,kBAAAA,KAAK,QAAIC,CAAAA,QAAQ,CAACD,KAAD,CAAZ,EAFnB,CAGI,OAAO,CAAEJ,SAAS,EAHtB,CAII,QAAQ,CAAEI,KAJd,EADJ,CAQH,CAvBD,CAyBA,cAAeF,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport getTopics from 'data/getTopics';\nimport { Typeahead } from 'react-bootstrap-typeahead'; \n\n\nconst Filter = ({ filterByTopic }) => {\n\n    const [topic, setTopic] = useState([\"\"]);\n\n    useEffect(() => {\n        if(topic.length === 0) \n            return filterByTopic(\"\");\n        \n        const chosenTopic = topic[0] && topic[0].trim();\n\n        if(chosenTopic)\n            filterByTopic(chosenTopic);\n\n    }, [topic]);\n\n    return(\n        <Typeahead\n            id={1}\n            onChange={topic => setTopic(topic)}\n            options={getTopics()}\n            selected={topic}\n        />\n    )\n}\n \nexport default Filter;"]},"metadata":{},"sourceType":"module"}