{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/auth/register.js\";\nimport React, { Component } from 'react';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fields: {\n        firstName: {\n          displayName: \"First Name\",\n          type: \"text\",\n          value: \"\"\n        },\n        lastName: {\n          displayName: \"Last Name\",\n          type: \"text\",\n          value: \"\"\n        },\n        email: {\n          displayName: \"Email\",\n          type: \"email\",\n          value: \"\"\n        },\n        password: {\n          displayName: \"Password\",\n          type: \"password\",\n          value: \"\"\n        },\n        passwordConfirmation: {\n          displayName: \"Confirm Password\",\n          type: \"password\",\n          value: \"\"\n        }\n      }\n    };\n  }\n\n  handleChange(e) {\n    const name = e.target.name,\n          newValue = e.target.value;\n    const oldField = this.state.fields[name];\n    const updatedField = { ...oldField,\n      value: newValue\n    };\n  }\n\n  render() {\n    const {\n      fields\n    } = this.state,\n          formFields = [];\n\n    for (let name in fields) {\n      formFields.push({\n        name,\n        ...fields[name]\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.register,\n      className: \"content container\",\n      children: [formFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"10px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: field.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: field.type,\n          name: field.name,\n          value: field.value,\n          onChange: e => this.handleChange(e),\n          placeholder: field.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default Register;","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/auth/register.js"],"names":["React","Component","Register","state","fields","firstName","displayName","type","value","lastName","email","password","passwordConfirmation","handleChange","e","name","target","newValue","oldField","updatedField","render","formFields","push","register","map","field","padding"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BE,KAF6B,GAErB;AACJC,MAAAA,MAAM,EAAE;AACJC,QAAAA,SAAS,EAAE;AAAEC,UAAAA,WAAW,EAAE,YAAf;AAA6BC,UAAAA,IAAI,EAAE,MAAnC;AAA2CC,UAAAA,KAAK,EAAE;AAAlD,SADP;AAEJC,QAAAA,QAAQ,EAAE;AAAEH,UAAAA,WAAW,EAAE,WAAf;AAA4BC,UAAAA,IAAI,EAAE,MAAlC;AAA0CC,UAAAA,KAAK,EAAE;AAAjD,SAFN;AAGJE,QAAAA,KAAK,EAAE;AAAEJ,UAAAA,WAAW,EAAE,OAAf;AAAwBC,UAAAA,IAAI,EAAE,OAA9B;AAAuCC,UAAAA,KAAK,EAAE;AAA9C,SAHH;AAIJG,QAAAA,QAAQ,EAAE;AAAEL,UAAAA,WAAW,EAAE,UAAf;AAA2BC,UAAAA,IAAI,EAAE,UAAjC;AAA6CC,UAAAA,KAAK,EAAE;AAApD,SAJN;AAKJI,QAAAA,oBAAoB,EAAE;AAAEN,UAAAA,WAAW,EAAE,kBAAf;AAAmCC,UAAAA,IAAI,EAAE,UAAzC;AAAqDC,UAAAA,KAAK,EAAE;AAA5D;AALlB;AADJ,KAFqB;AAAA;;AAY7BK,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZ,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AAAA,UAA4BE,QAAQ,GAAGH,CAAC,CAACE,MAAF,CAASR,KAAhD;AACA,UAAMU,QAAQ,GAAG,KAAKf,KAAL,CAAWC,MAAX,CAAkBW,IAAlB,CAAjB;AACA,UAAMI,YAAY,GAAG,EAAC,GAAGD,QAAJ;AAAcV,MAAAA,KAAK,EAAES;AAArB,KAArB;AAEH;;AAEDG,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEhB,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AAAA,UAA+BkB,UAAU,GAAG,EAA5C;;AAEA,SAAK,IAAIN,IAAT,IAAiBX,MAAjB,EAAyB;AACrBiB,MAAAA,UAAU,CAACC,IAAX,CAAgB;AACZP,QAAAA,IADY;AAEZ,WAAGX,MAAM,CAACW,IAAD;AAFG,OAAhB;AAIH;;AAED,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKQ,QAArB;AAA+B,MAAA,SAAS,EAAC,mBAAzC;AAAA,iBACKF,UAAU,CAACG,GAAX,CAAeC,KAAK,iBACjB;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAAA,gCACI;AAAA,oBAAQD,KAAK,CAACnB;AAAd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AACI,UAAA,SAAS,EAAC,OADd;AAEI,UAAA,IAAI,EAAEmB,KAAK,CAAClB,IAFhB;AAGI,UAAA,IAAI,EAAEkB,KAAK,CAACV,IAHhB;AAII,UAAA,KAAK,EAAEU,KAAK,CAACjB,KAJjB;AAKI,UAAA,QAAQ,EAAEM,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,CALnB;AAMI,UAAA,WAAW,EAAEW,KAAK,CAACnB;AANvB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,CADL,eAgBI;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH;;AAlD4B;;AAmDhC;AAED,eAAeJ,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Register extends Component {\n\n    state = {\n        fields: {\n            firstName: { displayName: \"First Name\", type: \"text\", value: \"\" },\n            lastName: { displayName: \"Last Name\", type: \"text\", value: \"\" },\n            email: { displayName: \"Email\", type: \"email\", value: \"\" },\n            password: { displayName: \"Password\", type: \"password\", value: \"\" },\n            passwordConfirmation: { displayName: \"Confirm Password\", type: \"password\", value: \"\" }\n        }\n    };\n\n    handleChange(e) {\n        const name = e.target.name, newValue = e.target.value;\n        const oldField = this.state.fields[name];\n        const updatedField = {...oldField, value: newValue};\n        \n    }\n\n    render() {\n\n        const { fields } = this.state, formFields = [];\n\n        for (let name in fields) {\n            formFields.push({\n                name,\n                ...fields[name]\n            })\n        }\n\n        return(\n            <form onSubmit={this.register} className=\"content container\">\n                {formFields.map(field => (\n                    <div style={{padding: \"10px 0\"}}>\n                        <label>{field.displayName}</label>\n\n                        <input \n                            className=\"input\"\n                            type={field.type} \n                            name={field.name} \n                            value={field.value}\n                            onChange={e => this.handleChange(e)} \n                            placeholder={field.displayName}\n                        />\n                    </div>\n                ))}\n    \n                <button className=\"button\" type=\"submit\">Submit</button>\n            </form>\n        );\n    }\n};\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}