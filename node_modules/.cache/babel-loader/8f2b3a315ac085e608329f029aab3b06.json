{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/portal/PortalContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { apiHost } from 'config.js';\nimport './styles.css';\nimport { webHost } from 'config';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Checkmark } from 'react-checkmark';\n\nconst PortalContainer = () => {\n  _s();\n\n  const [createdQuizzes, setCreatedQuizzes] = useState([]);\n  const [copied, setCopied] = useState(false);\n\n  const getUsersQuizzes = () => {\n    axios.get(`${apiHost}/api/quizzes/created`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\n      }\n    }).then(res => {\n      setCreatedQuizzes(res.data);\n    });\n  };\n\n  useEffect(getUsersQuizzes, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container portal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title has-text-weight-light\",\n      children: \"Here our a list of quizzes you have made...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), createdQuizzes && createdQuizzes.map((quiz, idx) => {\n      const url = `${webHost}/quizzes/${quiz.id}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box content\",\n        style: {\n          maxWidth: \"500px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"has-text-weight-light\",\n          children: [\"A quiz on \", quiz.topic, \" from \", quiz.creationDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"has-text-weight-light\",\n          children: [\"Your friends can take it at: \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: url,\n            children: url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 92\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: url,\n          onCopy: () => setCopied(true),\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-light\",\n            children: \"Copy Link to Clipboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), copied && /*#__PURE__*/_jsxDEV(\"h6\", {\n          style: {\n            marginTop: \"15px\"\n          },\n          className: \"has-text-weight-light\",\n          children: \"Copied\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 36\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => window.location = \"/create\",\n      style: {\n        marginTop: \"10px\"\n      },\n      className: \"button is-info\",\n      children: \"Create New Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PortalContainer, \"AykqSjMiY7LB4f6/Lck5FlT2bVA=\");\n\n_c = PortalContainer;\nexport default PortalContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortalContainer\");","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/portal/PortalContainer.js"],"names":["React","useState","useEffect","axios","apiHost","webHost","CopyToClipboard","Checkmark","PortalContainer","createdQuizzes","setCreatedQuizzes","copied","setCopied","getUsersQuizzes","get","headers","localStorage","getItem","then","res","data","map","quiz","idx","url","id","maxWidth","topic","creationDate","marginTop","window","location"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMY,eAAe,GAAG,MAAM;AAC1BV,IAAAA,KAAK,CAACW,GAAN,CAAW,GAAEV,OAAQ,sBAArB,EAA4C;AACxCW,MAAAA,OAAO,EAAE;AAAE,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA4B;AAAzD;AAD+B,KAA5C,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACXT,MAAAA,iBAAiB,CAACS,GAAG,CAACC,IAAL,CAAjB;AACH,KAJD;AAKH,GAND;;AAQAlB,EAAAA,SAAS,CAACW,eAAD,EAAkB,EAAlB,CAAT;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGKJ,cAAc,IAAIA,cAAc,CAACY,GAAf,CAAmB,CAACC,IAAD,EAAOC,GAAP,KAAe;AACjD,YAAMC,GAAG,GAAI,GAAEnB,OAAQ,YAAWiB,IAAI,CAACG,EAAG,EAA1C;AAEA,0BACI;AAAe,QAAA,SAAS,EAAC,aAAzB;AAAuC,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAA9C;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA,mCAAiDJ,IAAI,CAACK,KAAtD,YAAmEL,IAAI,CAACM,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA,mEAAmE;AAAG,YAAA,IAAI,EAAEJ,GAAT;AAAA,sBAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,kBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEA,GAAvB;AACI,UAAA,MAAM,EAAE,MAAMZ,SAAS,CAAC,IAAD,CAD3B;AAAA,iCAEI;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,EASKD,MAAM,iBAAI;AAAI,UAAA,KAAK,EAAE;AAACkB,YAAAA,SAAS,EAAE;AAAZ,WAAX;AAAgC,UAAA,SAAS,EAAC,uBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATf;AAAA,SAAUN,GAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH,KAhBkB,CAHvB,eAqBI;AAAQ,MAAA,OAAO,EAAE,MAAMO,MAAM,CAACC,QAAP,GAAkB,SAAzC;AAAoD,MAAA,KAAK,EAAE;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAA3D;AAAgF,MAAA,SAAS,EAAC,gBAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAzCD;;GAAMrB,e;;KAAAA,e;AA2CN,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { apiHost } from 'config.js';\nimport './styles.css';\nimport { webHost } from 'config';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport { Checkmark } from 'react-checkmark'\n\nconst PortalContainer = () => {\n\n    const [createdQuizzes, setCreatedQuizzes] = useState([]);\n    const [copied, setCopied] = useState(false);\n\n    const getUsersQuizzes = () => {\n        axios.get(`${apiHost}/api/quizzes/created`, {\n            headers: { 'Authorization': `Bearer ${localStorage.getItem('jwt')}` }\n        }).then(res => {\n            setCreatedQuizzes(res.data)\n        })\n    }\n\n    useEffect(getUsersQuizzes, []);\n\n    return(\n        <div className=\"container portal\">  \n            <h3 className=\"title has-text-weight-light\">Here our a list of quizzes you have made...</h3>\n\n            {createdQuizzes && createdQuizzes.map((quiz, idx) => {\n                const url = `${webHost}/quizzes/${quiz.id}`;\n\n                return(\n                    <div key={idx} className=\"box content\" style={{maxWidth: \"500px\"}}>\n                        <h6 className=\"has-text-weight-light\">A quiz on {quiz.topic} from {quiz.creationDate}</h6>\n                        <h6 className=\"has-text-weight-light\">Your friends can take it at: <a href={url}>{url}</a></h6>\n\n                        <CopyToClipboard text={url}\n                            onCopy={() => setCopied(true)}>\n                            <button className=\"button is-light\">Copy Link to Clipboard</button>\n                        </CopyToClipboard>\n\n                        {copied && <h6 style={{marginTop: \"15px\"}} className=\"has-text-weight-light\">Copied</h6>}\n                    </div>\n                )\n            })}\n\n            <button onClick={() => window.location = \"/create\"} style={{marginTop: \"10px\"}} className=\"button is-info\">Create New Quiz</button>\n        </div>\n    )\n\n}\n\nexport default PortalContainer;"]},"metadata":{},"sourceType":"module"}