{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/create/newQuestion.js\";\nimport React, { Component } from 'react';\nimport AnswerChoice from './answerChoice';\nimport './styles.css';\n\nclass NewQuestion extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionPrompt: \"\",\n      answerChoices: [\"\", \"\", \"\", \"\"]\n    };\n\n    this.removeAnswer = deletionIdx => {\n      const remainingAnswers = this.state.answerChoices.filter((_, idx) => idx !== deletionIdx);\n      if (remainingAnswers.length < 2) alert(\"There must be more than one answer choice.\");else this.setState({\n        answerChoices: remainingAnswers\n      });\n    };\n\n    this.addAnswer = () => {\n      this.setState();\n    };\n\n    this.handleChange = event => {\n      const name = event.target.name,\n            value = event.target.value;\n\n      if (name === \"questionPrompt\") {\n        this.setState({\n          questionPrompt: value\n        });\n      } else {\n        const {\n          answerChoices\n        } = this.state,\n              idx = name;\n        answerChoices[idx] = value;\n        this.setState({\n          answerChoices\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      questionPrompt,\n      answerChoices\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new-question-prompt\",\n        type: \"text\",\n        placeholder: \"Add your question\",\n        value: questionPrompt,\n        name: \"questionPrompt\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), answerChoices.map((answerChoice, idx) => /*#__PURE__*/_jsxDEV(AnswerChoice, {\n        value: answerChoice,\n        idx: idx,\n        remove: this.removeAnswer,\n        onChange: this.handleChange\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default NewQuestion;","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/create/newQuestion.js"],"names":["React","Component","AnswerChoice","NewQuestion","state","questionPrompt","answerChoices","removeAnswer","deletionIdx","remainingAnswers","filter","_","idx","length","alert","setState","addAnswer","handleChange","event","name","target","value","render","map","answerChoice"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,cAAP;;AAEA,MAAOC,WAAP,SAA2BF,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCG,KAFiC,GAEzB;AACJC,MAAAA,cAAc,EAAE,EADZ;AAEJC,MAAAA,aAAa,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb;AAFX,KAFyB;;AAAA,SAOjCC,YAPiC,GAOlBC,WAAW,IAAI;AAC1B,YAAMC,gBAAgB,GAAG,KAAKL,KAAL,CAAWE,aAAX,CAAyBI,MAAzB,CAAgC,CAACC,CAAD,EAAIC,GAAJ,KAAYA,GAAG,KAAKJ,WAApD,CAAzB;AAEA,UAAGC,gBAAgB,CAACI,MAAjB,GAA0B,CAA7B,EACIC,KAAK,CAAC,4CAAD,CAAL,CADJ,KAGI,KAAKC,QAAL,CAAc;AAACT,QAAAA,aAAa,EAAEG;AAAhB,OAAd;AACP,KAdgC;;AAAA,SAgBjCO,SAhBiC,GAgBrB,MAAM;AACd,WAAKD,QAAL;AACH,KAlBgC;;AAAA,SAoBjCE,YApBiC,GAoBlBC,KAAK,IAAK;AACrB,YAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AAAA,YAAgCE,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAArD;;AAEA,UAAGF,IAAI,KAAK,gBAAZ,EAA8B;AAC1B,aAAKJ,QAAL,CAAc;AAACV,UAAAA,cAAc,EAAEgB;AAAjB,SAAd;AACH,OAFD,MAEO;AACH,cAAM;AAAEf,UAAAA;AAAF,YAAoB,KAAKF,KAA/B;AAAA,cAAsCQ,GAAG,GAAGO,IAA5C;AACAb,QAAAA,aAAa,CAACM,GAAD,CAAb,GAAqBS,KAArB;AACA,aAAKN,QAAL,CAAc;AAACT,UAAAA;AAAD,SAAd;AACH;AACJ,KA9BgC;AAAA;;AAgCjCgB,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEjB,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAAoC,KAAKF,KAA/C;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AACI,QAAA,SAAS,EAAC,qBADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,WAAW,EAAC,mBAHhB;AAII,QAAA,KAAK,EAAEC,cAJX;AAKI,QAAA,IAAI,EAAC,gBALT;AAMI,QAAA,QAAQ,EAAE,KAAKY;AANnB;AAAA;AAAA;AAAA;AAAA,cADJ,EAUKX,aAAa,CAACiB,GAAd,CAAkB,CAACC,YAAD,EAAeZ,GAAf,kBAEX,QAAC,YAAD;AAEI,QAAA,KAAK,EAAEY,YAFX;AAGI,QAAA,GAAG,EAAEZ,GAHT;AAII,QAAA,MAAM,EAAE,KAAKL,YAJjB;AAKI,QAAA,QAAQ,EAAE,KAAKU;AALnB,SACSL,GADT;AAAA;AAAA;AAAA;AAAA,cAFP,CAVL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH;;AA5DgC;;AA+DrC,eAAeT,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport AnswerChoice from './answerChoice';\nimport './styles.css';\n\nclass  NewQuestion extends Component {\n\n    state = {\n        questionPrompt: \"\",\n        answerChoices: [\"\", \"\", \"\", \"\"]\n    }\n\n    removeAnswer = deletionIdx => {\n        const remainingAnswers = this.state.answerChoices.filter((_, idx) => idx !== deletionIdx);\n\n        if(remainingAnswers.length < 2)\n            alert(\"There must be more than one answer choice.\")\n        else\n            this.setState({answerChoices: remainingAnswers});\n    }\n\n    addAnswer = () => {\n        this.setState()\n    } \n\n    handleChange = event =>  {\n        const name = event.target.name, value = event.target.value;\n\n        if(name === \"questionPrompt\") {\n            this.setState({questionPrompt: value});\n        } else {\n            const { answerChoices } = this.state, idx = name;\n            answerChoices[idx] = value;\n            this.setState({answerChoices});\n        }\n    }\n\n    render() {\n\n        const { questionPrompt, answerChoices } = this.state;\n\n        return(\n            <div className=\"new-question\">\n                <input \n                    className=\"new-question-prompt\" \n                    type=\"text\" \n                    placeholder=\"Add your question\"\n                    value={questionPrompt}\n                    name=\"questionPrompt\" \n                    onChange={this.handleChange}\n                />\n                \n                {answerChoices.map((answerChoice, idx) => (\n\n                        <AnswerChoice \n                            key={idx}\n                            value={answerChoice} \n                            idx={idx} \n                            remove={this.removeAnswer}\n                            onChange={this.handleChange}\n                        />\n                ))}\n\n            </div>\n        )\n    }\n}\n \nexport default NewQuestion;"]},"metadata":{},"sourceType":"module"}