{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/quiz/gradedQuiz.js\";\nimport React from 'react';\nimport GradedQuestion from './gradedQuestion';\nimport runGrader from 'utils/runGrader';\n\nconst GradedQuiz = ({\n  quiz,\n  givenAnswers,\n  retake\n}) => {\n  const {\n    topic,\n    questions,\n    creator\n  } = quiz,\n        numCorrect = runGrader(quiz.questions, givenAnswers),\n        PASSING_GRADE = .7;\n  const gradeMessage = `You got ${numCorrect} out of ${questions.length} correct.`;\n  let classes = \"notification\",\n      secondaryMessage = \"\";\n\n  if (numCorrect / questions.length < PASSING_GRADE) {\n    classes += \" is-warning\";\n    secondaryMessage += \"Let's do better next time.\";\n  } else {\n    classes += \" is-success\";\n    secondaryMessage += \"Really well done!\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      padding: \"3% 0\",\n      maxWidth: \"600px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes,\n      children: [gradeMessage, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 52\n      }, this), secondaryMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Quiz on \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: topic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this), \"  by \", creator]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), questions && questions.map((question, idx) => {\n      const chosenAnswer = givenAnswers[question.id];\n      return /*#__PURE__*/_jsxDEV(GradedQuestion, {\n        number: idx + 1,\n        question: question,\n        chosenAnswer: chosenAnswer\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: retake,\n      className: \"button is-info\",\n      children: \"Retake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GradedQuiz;\nexport default GradedQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"GradedQuiz\");","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/quiz/gradedQuiz.js"],"names":["React","GradedQuestion","runGrader","GradedQuiz","quiz","givenAnswers","retake","topic","questions","creator","numCorrect","PASSING_GRADE","gradeMessage","length","classes","secondaryMessage","padding","maxWidth","map","question","idx","chosenAnswer","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAD,KAAoC;AAEnD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,MAAgCL,IAAtC;AAAA,QAA4CM,UAAU,GAAGR,SAAS,CAACE,IAAI,CAACI,SAAN,EAAiBH,YAAjB,CAAlE;AAAA,QAAkGM,aAAa,GAAG,EAAlH;AACA,QAAMC,YAAY,GAAI,WAAUF,UAAW,WAAUF,SAAS,CAACK,MAAO,WAAtE;AAEA,MAAIC,OAAO,GAAG,cAAd;AAAA,MAA8BC,gBAAgB,GAAG,EAAjD;;AAEA,MAAIL,UAAU,GAAGF,SAAS,CAACK,MAAxB,GAAkCF,aAArC,EAAoD;AAChDG,IAAAA,OAAO,IAAI,aAAX;AACAC,IAAAA,gBAAgB,IAAI,4BAApB;AACH,GAHD,MAGO;AACHD,IAAAA,OAAO,IAAI,aAAX;AACAC,IAAAA,gBAAgB,IAAI,mBAApB;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,QAAQ,EAAE;AAA5B,KAAlC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEH,OAAhB;AAAA,iBAA0BF,YAA1B,eAAuC;AAAA;AAAA;AAAA;AAAA,cAAvC,EAA6CG,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,0CAAY;AAAA,kBAASR;AAAT;AAAA;AAAA;AAAA;AAAA,cAAZ,WAA0CE,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAKKD,SAAS,IAAIA,SAAS,CAACU,GAAV,CAAc,CAACC,QAAD,EAAWC,GAAX,KAAmB;AAE3C,YAAMC,YAAY,GAAGhB,YAAY,CAACc,QAAQ,CAACG,EAAV,CAAjC;AAEA,0BACI,QAAC,cAAD;AAEI,QAAA,MAAM,EAAEF,GAAG,GAAC,CAFhB;AAGI,QAAA,QAAQ,EAAED,QAHd;AAII,QAAA,YAAY,EAAEE;AAJlB,SACSD,GADT;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KAZa,CALlB,eAmBA;AAAQ,MAAA,OAAO,EAAEd,MAAjB;AAAyB,MAAA,SAAS,EAAC,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAvCD;;KAAMH,U;AAyCN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport GradedQuestion from './gradedQuestion';\nimport runGrader from 'utils/runGrader';\n\nconst GradedQuiz = ({ quiz, givenAnswers, retake }) => {\n\n    const { topic, questions, creator } = quiz, numCorrect = runGrader(quiz.questions, givenAnswers), PASSING_GRADE = .7;\n    const gradeMessage = `You got ${numCorrect} out of ${questions.length} correct.`;\n\n    let classes = \"notification\", secondaryMessage = \"\";\n\n    if((numCorrect / questions.length) < PASSING_GRADE) {\n        classes += \" is-warning\";\n        secondaryMessage += \"Let's do better next time.\"\n    } else {\n        classes += \" is-success\";\n        secondaryMessage += \"Really well done!\"\n    }\n\n    return(\n        <div className=\"container\" style={{padding: \"3% 0\", maxWidth: \"600px\"}}>\n            <div className={classes}>{gradeMessage}<br/>{secondaryMessage}</div>\n\n            <h3>Quiz on <strong>{topic}</strong>  by {creator}</h3>\n\n            {questions && questions.map((question, idx) => {\n\n                const chosenAnswer = givenAnswers[question.id];\n\n                return(\n                    <GradedQuestion \n                        key={idx} \n                        number={idx+1} \n                        question={question} \n                        chosenAnswer={chosenAnswer}\n                    />\n                )\n            })}\n\n        <button onClick={retake} className=\"button is-info\">Retake</button>\n\n        </div>\n    )\n};\n \nexport default GradedQuiz;"]},"metadata":{},"sourceType":"module"}