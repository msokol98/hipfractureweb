{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/auth/form.js\";\nimport React, { Component } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport './styles.css';\n\nclass FormTemplate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fields: this.props.fields,\n      validationError: false\n    };\n  }\n\n  handleChange(e) {\n    const {\n      fields\n    } = this.state;\n    const name = e.target.name,\n          newValue = e.target.value;\n    const oldField = fields[name];\n    const updatedField = { ...oldField,\n      value: newValue\n    };\n    this.setState({\n      fields: { ...fields,\n        [name]: updatedField\n      }\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {\n      fields\n    } = this.state,\n          {\n      validate,\n      submit\n    } = this.props;\n\n    if (!validate || validate(fields)) {\n      const formData = {};\n\n      for (let name in fields) formData[name] = fields[name].value;\n\n      submit(formData);\n    } else {\n      this.setState({\n        validationError: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      fields,\n      validationError\n    } = this.state,\n          formFields = [];\n\n    for (let name in fields) {\n      formFields.push({\n        name,\n        ...fields[name]\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"3%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.handleSubmit(e),\n        className: \"content container bordered has-background-white auth-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title has-text-weight-light \",\n          children: this.props.header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), formFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"10px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: field.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            className: \"input\",\n            type: field.type,\n            name: field.name,\n            value: field.value,\n            onChange: e => this.handleChange(e),\n            placeholder: field.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, field.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), validationError && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: this.props.validationErrorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 41\n        }, this), this.props.error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: this.props.serverErrorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-info is-fullwidth\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), this.props.extraJsx && this.props.extraJsx]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FormTemplate;","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/auth/form.js"],"names":["React","Component","Alert","FormTemplate","state","fields","props","validationError","handleChange","e","name","target","newValue","value","oldField","updatedField","setState","handleSubmit","preventDefault","validate","submit","formData","render","formFields","push","paddingTop","header","map","field","padding","displayName","type","validationErrorMessage","error","serverErrorMessage","extraJsx"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport './styles.css';\n\nclass FormTemplate extends Component {\n\n    state = { \n        fields: this.props.fields,\n        validationError: false\n     };\n\n    handleChange(e) {\n        const { fields } = this.state;\n        const name = e.target.name, newValue = e.target.value;\n        const oldField = fields[name];\n        const updatedField = {...oldField, value: newValue};\n\n        this.setState({fields: {...fields, [name]: updatedField}});\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const { fields } = this.state, { validate, submit } = this.props;\n\n        if(!validate || validate(fields)) {\n            const formData = {};\n\n            for (let name in fields)\n                formData[name] = fields[name].value;\n\n            submit(formData);\n        } else {\n            this.setState({validationError: true});\n        }\n    }\n\n    render() { \n\n        const { fields, validationError } = this.state, formFields = [];\n\n        for (let name in fields) {\n            formFields.push({\n                name,\n                ...fields[name]\n            })\n        }\n\n        return(\n            <div style={{paddingTop: \"3%\"}}>\n                <form onSubmit={e => this.handleSubmit(e)} className=\"content container bordered has-background-white auth-form\">\n                    \n                    <h3 className=\"title has-text-weight-light \">{this.props.header}</h3>\n\n                    {formFields.map(field => (\n                        <div key={field.name} style={{padding: \"10px 0\"}}>\n                            <label>{field.displayName}</label>\n\n                            <input \n                                required\n                                className=\"input\"\n                                type={field.type} \n                                name={field.name} \n                                value={field.value}\n                                onChange={e => this.handleChange(e)} \n                                placeholder={field.displayName}\n                            />\n                        </div>\n                    ))}\n                    <br />\n\n                    {validationError && <Alert variant=\"danger\">{this.props.validationErrorMessage}</Alert>}\n                    {this.props.error && <Alert variant=\"danger\">{this.props.serverErrorMessage}</Alert>}\n\n                    <button className=\"button is-info is-fullwidth\" type=\"submit\">Submit</button>\n\n                    {this.props.extraJsx && this.props.extraJsx}\n\n                </form>\n            </div>\n        );\n\n    }\n}\n \nexport default FormTemplate;"]},"metadata":{},"sourceType":"module"}