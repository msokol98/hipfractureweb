{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/quiz/quizContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { apiHost } from 'config';\nimport Quiz from './quiz';\n\nconst QuizContainer = props => {\n  _s();\n\n  const quizId = props.match.params.quizId,\n        [quiz, setQuiz] = useState(null);\n  const [givenAnswers, setGivenAnswers] = useState({});\n\n  const fetchQuiz = () => {\n    axios.get(`${apiHost}/api/quizzes/${quizId}`).then(res => {\n      setQuiz(res.data);\n    });\n  };\n\n  useEffect(fetchQuiz, [quizId]);\n\n  const setAnswer = (answer, questionId) => {\n    const answers = { ...givenAnswers\n    };\n    answers[questionId] = answer;\n    setGivenAnswers(answers);\n  };\n\n  const checkAnswers = answers => {\n    console.log(givenAnswers);\n  };\n\n  if (!quiz) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 16\n  }, this);\n  console.log(givenAnswers);\n  return /*#__PURE__*/_jsxDEV(Quiz, {\n    quiz: { ...quiz,\n      quizId\n    },\n    checkAnswers: checkAnswers,\n    setAnswer: setAnswer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n\n_s(QuizContainer, \"PdISxfWZOKL1Mh/Sptw1dFtbJb0=\");\n\n_c = QuizContainer;\nexport default QuizContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizContainer\");","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/quiz/quizContainer.js"],"names":["React","useState","useEffect","axios","apiHost","Quiz","QuizContainer","props","quizId","match","params","quiz","setQuiz","givenAnswers","setGivenAnswers","fetchQuiz","get","then","res","data","setAnswer","answer","questionId","answers","checkAnswers","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA;;AAE3B,QAAMC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,MAAlC;AAAA,QAA0C,CAACG,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAApE;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMc,SAAS,GAAG,MAAM;AACpBZ,IAAAA,KAAK,CAACa,GAAN,CAAW,GAAEZ,OAAQ,gBAAeI,MAAO,EAA3C,EAA8CS,IAA9C,CAAmDC,GAAG,IAAI;AACtDN,MAAAA,OAAO,CAACM,GAAG,CAACC,IAAL,CAAP;AACH,KAFD;AAGH,GAJD;;AAMAjB,EAAAA,SAAS,CAACa,SAAD,EAAY,CAACP,MAAD,CAAZ,CAAT;;AAEA,QAAMY,SAAS,GAAG,CAACC,MAAD,EAASC,UAAT,KAAwB;AACtC,UAAMC,OAAO,GAAG,EAAC,GAAGV;AAAJ,KAAhB;AACAU,IAAAA,OAAO,CAACD,UAAD,CAAP,GAAsBD,MAAtB;AACAP,IAAAA,eAAe,CAACS,OAAD,CAAf;AACH,GAJD;;AAMA,QAAMC,YAAY,GAAGD,OAAO,IAAI;AAC5BE,IAAAA,OAAO,CAACC,GAAR,CAAYb,YAAZ;AACH,GAFD;;AAIA,MAAG,CAACF,IAAJ,EACI,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEJc,EAAAA,OAAO,CAACC,GAAR,CAAYb,YAAZ;AAEA,sBAAO,QAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAC,GAAGF,IAAJ;AAAUH,MAAAA;AAAV,KAAZ;AAA+B,IAAA,YAAY,EAAEgB,YAA7C;AAA2D,IAAA,SAAS,EAAEJ;AAAtE;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA7BD;;GAAMd,a;;KAAAA,a;AA+BN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { apiHost } from 'config';\nimport Quiz from './quiz';\n\nconst QuizContainer = props => {\n\n    const quizId = props.match.params.quizId, [quiz, setQuiz] = useState(null);\n    const [givenAnswers, setGivenAnswers] = useState({});\n\n    const fetchQuiz = () => {\n        axios.get(`${apiHost}/api/quizzes/${quizId}`).then(res => {\n            setQuiz(res.data);\n        });\n    }\n\n    useEffect(fetchQuiz, [quizId]);\n\n    const setAnswer = (answer, questionId) => {\n        const answers = {...givenAnswers};\n        answers[questionId] = answer;\n        setGivenAnswers(answers);\n    }\n\n    const checkAnswers = answers => {\n        console.log(givenAnswers);\n    }\n\n    if(!quiz)\n        return <div>Loading...</div>\n\n    console.log(givenAnswers)\n\n    return <Quiz quiz={{...quiz, quizId}} checkAnswers={checkAnswers} setAnswer={setAnswer}  />\n}\n \nexport default QuizContainer;"]},"metadata":{},"sourceType":"module"}