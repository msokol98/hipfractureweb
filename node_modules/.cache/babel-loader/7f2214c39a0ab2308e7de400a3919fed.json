{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/quiz/question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'components/create/styles.css';\nimport './styles.css';\nimport mapIdxToLetter from 'utils/mapIdxToLetter';\nimport createMarkup from 'utils/createMarkup';\n\nconst Question = ({\n  question,\n  number,\n  setAnswer\n}) => {\n  _s();\n\n  const {\n    prompt,\n    answerChoices,\n    id\n  } = question;\n  const [chosenAnswer, setChosenAnswer] = useState(null);\n\n  const fixAnswer = idx => {\n    setChosenAnswer(mapIdxToLetter(idx));\n    setAnswer(mapIdxToLetter(idx), id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Question \", number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"quiz-question-prompt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), answerChoices && answerChoices.map((answerChoice, idx) => {\n      let classes = \"box\";\n      if (mapIdxToLetter(idx) === chosenAnswer) classes += \" chosen-answer\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-question-answer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          onClick: () => fixAnswer(idx),\n          name: `question ${id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes,\n          dangerouslySetInnerHTML: createMarkup(answerChoice.body)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"NQsidhX3oISTAJHcWlAelf1CByY=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/quiz/question.js"],"names":["React","useState","mapIdxToLetter","createMarkup","Question","question","number","setAnswer","prompt","answerChoices","id","chosenAnswer","setChosenAnswer","fixAnswer","idx","map","answerChoice","classes","body"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,8BAAP;AACA,OAAO,cAAP;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AAAA;;AAElD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,aAAV;AAAyBC,IAAAA;AAAzB,MAAgCL,QAAtC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;;AAEA,QAAMY,SAAS,GAAGC,GAAG,IAAI;AACrBF,IAAAA,eAAe,CAACV,cAAc,CAACY,GAAD,CAAf,CAAf;AACAP,IAAAA,SAAS,CAACL,cAAc,CAACY,GAAD,CAAf,EAAsBJ,EAAtB,CAAT;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAA,8BAAcJ,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAI,MAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YAHJ,EAKKG,aAAa,IAAIA,aAAa,CAACM,GAAd,CAAkB,CAACC,YAAD,EAAeF,GAAf,KAAuB;AAEvD,UAAIG,OAAO,GAAG,KAAd;AAEA,UAAGf,cAAc,CAACY,GAAD,CAAd,KAAwBH,YAA3B,EACIM,OAAO,IAAI,gBAAX;AAGJ,0BACI;AAAe,QAAA,SAAS,EAAC,sBAAzB;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,OAAO,EAAE,MAAMJ,SAAS,CAACC,GAAD,CAA5C;AAAmD,UAAA,IAAI,EAAG,YAAWJ,EAAG;AAAxE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,UAAA,SAAS,EAAEO,OAAhB;AAAyB,UAAA,uBAAuB,EAAEd,YAAY,CAACa,YAAY,CAACE,IAAd;AAA9D;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAAUJ,GAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KAhBiB,CALtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAnCD;;GAAMV,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport 'components/create/styles.css';\nimport './styles.css';\nimport mapIdxToLetter from 'utils/mapIdxToLetter';\nimport createMarkup from 'utils/createMarkup';\n\nconst Question = ({ question, number, setAnswer }) => {\n\n    const { prompt, answerChoices, id } = question;\n    const [chosenAnswer, setChosenAnswer] = useState(null);\n\n    const fixAnswer = idx => {\n        setChosenAnswer(mapIdxToLetter(idx));\n        setAnswer(mapIdxToLetter(idx), id);\n    }\n\n    return(\n        <div className=\"new-question\">\n            <h4>Question {number}</h4>\n\n            <h6 className=\"quiz-question-prompt\" />\n\n            {answerChoices && answerChoices.map((answerChoice, idx) => {\n\n                let classes = \"box\";\n\n                if(mapIdxToLetter(idx) === chosenAnswer) \n                    classes += \" chosen-answer\";\n                \n\n                return(\n                    <div key={idx} className=\"quiz-question-answer\">\n                        <input type=\"radio\" onClick={() => fixAnswer(idx)} name={`question ${id}`}/>\n\n                        <div className={classes} dangerouslySetInnerHTML={createMarkup(answerChoice.body)} />\n                    </div>\n                )\n        \n            })}\n        </div>\n    )\n}\n\n\n \nexport default Question;"]},"metadata":{},"sourceType":"module"}