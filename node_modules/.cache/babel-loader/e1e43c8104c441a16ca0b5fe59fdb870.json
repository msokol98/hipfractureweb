{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/temp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport mapIdxToLetter from 'utils/mapIdxToLetter';\nimport postToServer from 'utils/postToServer';\n\nconst Temp = () => {\n  _s();\n\n  const fetchQuiz = topic => {\n    const url = `https://opentdb.com/api.php?amount=10&difficulty=easy&category=${topic}`;\n    axios.get(url).then(res => {\n      const quiz = res.data.results;\n      const questions = quiz.map((question, questionNumber) => {\n        let answers = [...question.incorrect_answers, question.correct_answer];\n        answers = shuffle(answers);\n        const answerChoices = answers.map((answer, idx) => {\n          return {\n            body: answer,\n            letter: mapIdxToLetter(idx)\n          };\n        });\n        const correctAnswer = answerChoices.find(answer => answer.body === question.correct_answer).letter;\n        const prompt = question.question;\n        const number = questionNumber + 1;\n        return {\n          correctAnswer,\n          prompt,\n          number,\n          answerChoices\n        };\n      });\n      const submissionQuiz = {\n        questions,\n        topic: topic\n      };\n      console.log(submissionQuiz);\n      postToServer(\"api/quizzes\", submissionQuiz).then(res => {\n        console.log(res);\n      });\n    });\n  };\n\n  const generateQuizzes = () => {\n    axios.get(\"https://opentdb.com/api_category.php\").then(res => {\n      const categories = res.data.trivia_categories;\n    });\n    /*for (let i = 0; i < 100; i++) {\n        fetchQuiz();\n    }*/\n  };\n\n  useEffect(generateQuizzes, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Temp, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Temp;\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default Temp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Temp\");","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/temp.js"],"names":["React","useEffect","axios","mapIdxToLetter","postToServer","Temp","fetchQuiz","topic","url","get","then","res","quiz","data","results","questions","map","question","questionNumber","answers","incorrect_answers","correct_answer","shuffle","answerChoices","answer","idx","body","letter","correctAnswer","find","prompt","number","submissionQuiz","console","log","generateQuizzes","categories","trivia_categories","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport mapIdxToLetter from 'utils/mapIdxToLetter';\nimport postToServer from 'utils/postToServer';\n\nconst Temp = () => {\n\n    const fetchQuiz = (topic) => {\n\n        const url = `https://opentdb.com/api.php?amount=10&difficulty=easy&category=${topic}`;\n\n        axios.get(url).then(res => {\n            const quiz = res.data.results;\n            \n            const questions = quiz.map((question, questionNumber) => {\n                let answers = [...question.incorrect_answers, question.correct_answer];\n                answers = shuffle(answers);\n                const answerChoices = answers.map((answer, idx) => {\n                    return {\n                        body: answer,\n                        letter: mapIdxToLetter(idx)\n                    }\n                })\n\n                const correctAnswer = answerChoices.find(answer => answer.body === question.correct_answer).letter;\n                const prompt = question.question;\n                const number = questionNumber + 1;\n\n                return {\n                    correctAnswer,\n                    prompt,\n                    number,\n                    answerChoices\n                };\n            })\n\n            const submissionQuiz = {questions, topic: topic};\n\n            console.log(submissionQuiz)\n\n            postToServer(\"api/quizzes\", submissionQuiz).then(res => {\n                console.log(res)\n            })\n        })\n    }\n\n    const generateQuizzes = () => {\n\n        axios.get(\"https://opentdb.com/api_category.php\").then(res => {\n            const categories = res.data.trivia_categories;\n\n            \n        })\n        \n        /*for (let i = 0; i < 100; i++) {\n            fetchQuiz();\n        }*/\n    }\n\n    useEffect(generateQuizzes, []);\n\n    return <div>Hello</div>\n}\n\nfunction shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    while (0 !== currentIndex) {\n  \n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n}\n \nexport default Temp;"]},"metadata":{},"sourceType":"module"}