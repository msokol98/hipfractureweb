{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import GradedQuestion from'./gradedQuestion';import runGrader from'utils/runGrader';var GradedQuiz=function GradedQuiz(_ref){var quiz=_ref.quiz,givenAnswers=_ref.givenAnswers,retake=_ref.retake;var topic=quiz.topic,questions=quiz.questions,creator=quiz.creator,numCorrect=runGrader(quiz.questions,givenAnswers),PASSING_GRADE=.7;var gradeMessage=\"You got \".concat(numCorrect,\" out of \").concat(questions.length,\" correct.\");var classes=\"notification\",secondaryMessage=\"\";if(numCorrect/questions.length<PASSING_GRADE){classes+=\" is-warning\";secondaryMessage+=\"Let's do better next time.\";}else{classes+=\" is-success\";secondaryMessage+=\"Really well done!\";}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",style:{padding:\"3% 0\",maxWidth:\"600px\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:classes,children:[gradeMessage,/*#__PURE__*/_jsx(\"br\",{}),secondaryMessage]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Quiz on \",topic,\" by \",creator]}),questions&&questions.map(function(question,idx){var chosenAnswer=givenAnswers[question.id];return/*#__PURE__*/_jsx(GradedQuestion,{number:idx+1,question:question,chosenAnswer:chosenAnswer},idx);}),/*#__PURE__*/_jsx(\"button\",{onClick:retake,className:\"button is-info\",children:\"Retake\"})]});};export default GradedQuiz;","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/quiz/gradedQuiz.js"],"names":["React","GradedQuestion","runGrader","GradedQuiz","quiz","givenAnswers","retake","topic","questions","creator","numCorrect","PASSING_GRADE","gradeMessage","length","classes","secondaryMessage","padding","maxWidth","map","question","idx","chosenAnswer","id"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAoC,IAAjCC,CAAAA,IAAiC,MAAjCA,IAAiC,CAA3BC,YAA2B,MAA3BA,YAA2B,CAAbC,MAAa,MAAbA,MAAa,IAE3CC,CAAAA,KAF2C,CAEbH,IAFa,CAE3CG,KAF2C,CAEpCC,SAFoC,CAEbJ,IAFa,CAEpCI,SAFoC,CAEzBC,OAFyB,CAEbL,IAFa,CAEzBK,OAFyB,CAEPC,UAFO,CAEMR,SAAS,CAACE,IAAI,CAACI,SAAN,CAAiBH,YAAjB,CAFf,CAE+CM,aAF/C,CAE+D,EAF/D,CAGnD,GAAMC,CAAAA,YAAY,mBAAcF,UAAd,oBAAmCF,SAAS,CAACK,MAA7C,aAAlB,CAEA,GAAIC,CAAAA,OAAO,CAAG,cAAd,CAA8BC,gBAAgB,CAAG,EAAjD,CAEA,GAAIL,UAAU,CAAGF,SAAS,CAACK,MAAxB,CAAkCF,aAArC,CAAoD,CAChDG,OAAO,EAAI,aAAX,CACAC,gBAAgB,EAAI,4BAApB,CACH,CAHD,IAGO,CACHD,OAAO,EAAI,aAAX,CACAC,gBAAgB,EAAI,mBAApB,CACH,CAED,mBACI,aAAK,SAAS,CAAC,WAAf,CAA2B,KAAK,CAAE,CAACC,OAAO,CAAE,MAAV,CAAkBC,QAAQ,CAAE,OAA5B,CAAlC,wBACI,aAAK,SAAS,CAAEH,OAAhB,WAA0BF,YAA1B,cAAuC,aAAvC,CAA6CG,gBAA7C,GADJ,cAGI,iCAAaR,KAAb,QAAwBE,OAAxB,GAHJ,CAKKD,SAAS,EAAIA,SAAS,CAACU,GAAV,CAAc,SAACC,QAAD,CAAWC,GAAX,CAAmB,CAE3C,GAAMC,CAAAA,YAAY,CAAGhB,YAAY,CAACc,QAAQ,CAACG,EAAV,CAAjC,CAEA,mBACI,KAAC,cAAD,EAEI,MAAM,CAAEF,GAAG,CAAC,CAFhB,CAGI,QAAQ,CAAED,QAHd,CAII,YAAY,CAAEE,YAJlB,EACSD,GADT,CADJ,CAQH,CAZa,CALlB,cAmBA,eAAQ,OAAO,CAAEd,MAAjB,CAAyB,SAAS,CAAC,gBAAnC,oBAnBA,GADJ,CAwBH,CAvCD,CAyCA,cAAeH,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport GradedQuestion from './gradedQuestion';\nimport runGrader from 'utils/runGrader';\n\nconst GradedQuiz = ({ quiz, givenAnswers, retake }) => {\n\n    const { topic, questions, creator } = quiz, numCorrect = runGrader(quiz.questions, givenAnswers), PASSING_GRADE = .7;\n    const gradeMessage = `You got ${numCorrect} out of ${questions.length} correct.`;\n\n    let classes = \"notification\", secondaryMessage = \"\";\n\n    if((numCorrect / questions.length) < PASSING_GRADE) {\n        classes += \" is-warning\";\n        secondaryMessage += \"Let's do better next time.\"\n    } else {\n        classes += \" is-success\";\n        secondaryMessage += \"Really well done!\"\n    }\n\n    return(\n        <div className=\"container\" style={{padding: \"3% 0\", maxWidth: \"600px\"}}>\n            <div className={classes}>{gradeMessage}<br/>{secondaryMessage}</div>\n\n            <h3>Quiz on {topic} by {creator}</h3>\n\n            {questions && questions.map((question, idx) => {\n\n                const chosenAnswer = givenAnswers[question.id];\n\n                return(\n                    <GradedQuestion \n                        key={idx} \n                        number={idx+1} \n                        question={question} \n                        chosenAnswer={chosenAnswer}\n                    />\n                )\n            })}\n\n        <button onClick={retake} className=\"button is-info\">Retake</button>\n\n        </div>\n    )\n};\n \nexport default GradedQuiz;"]},"metadata":{},"sourceType":"module"}