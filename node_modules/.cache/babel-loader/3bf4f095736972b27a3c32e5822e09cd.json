{"ast":null,"code":"import axios from 'axios';\nimport mapIdxToLetter from 'utils/mapIdxToLetter';\nimport postToServer from 'utils/postToServer';\n\nconst autoGenerateQuiz = () => {\n  axios.get(\"https://opentdb.com/api_category.php\").then(res => {\n    const categories = res.data.trivia_categories;\n    const randomCategory = categories[Math.floor(Math.random() * categories.length)];\n    const {\n      id,\n      name\n    } = randomCategory;\n    fetchQuiz(name, id);\n  });\n};\n\nconst fetchQuiz = (categoryName, categoryId) => {\n  const url = `https://opentdb.com/api.php?amount=10&difficulty=easy&category=${categoryId}`;\n  axios.get(url).then(res => {\n    const quiz = res.data.results;\n    if (!quiz || quiz.length === 0) return;\n    const questions = quiz.map((question, questionNumber) => {\n      let answers = [...question.incorrect_answers, question.correct_answer];\n      answers = shuffle(answers);\n      const answerChoices = answers.map((answer, idx) => {\n        return {\n          body: answer,\n          letter: mapIdxToLetter(idx)\n        };\n      });\n      const correctAnswer = answerChoices.find(answer => answer.body === question.correct_answer).letter;\n      const prompt = question.question;\n      const number = questionNumber + 1;\n      return {\n        correctAnswer,\n        prompt,\n        number,\n        answerChoices\n      };\n    });\n    const submissionQuiz = {\n      questions,\n      topic: categoryName\n    };\n    postToServer(\"api/quizzes\", submissionQuiz).then(res => {\n      const quizId = res.data;\n      alert(\"Your quiz has been made.\");\n      window.location = `/quizzes/${quizId}`;\n    });\n  });\n};\n\nconst shuffle = array => {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nexport default autoGenerateQuiz;","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/utils/autoGen.js"],"names":["axios","mapIdxToLetter","postToServer","autoGenerateQuiz","get","then","res","categories","data","trivia_categories","randomCategory","Math","floor","random","length","id","name","fetchQuiz","categoryName","categoryId","url","quiz","results","questions","map","question","questionNumber","answers","incorrect_answers","correct_answer","shuffle","answerChoices","answer","idx","body","letter","correctAnswer","find","prompt","number","submissionQuiz","topic","quizId","alert","window","location","array","currentIndex","temporaryValue","randomIndex"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3BH,EAAAA,KAAK,CAACI,GAAN,CAAU,sCAAV,EAAkDC,IAAlD,CAAuDC,GAAG,IAAI;AACtD,UAAMC,UAAU,GAAGD,GAAG,CAACE,IAAJ,CAASC,iBAA5B;AACA,UAAMC,cAAc,GAAGH,UAAU,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,UAAU,CAACO,MAAtC,CAAD,CAAjC;AACA,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAeN,cAArB;AACAO,IAAAA,SAAS,CAACD,IAAD,EAAOD,EAAP,CAAT;AACP,GALD;AAMH,CAPD;;AASA,MAAME,SAAS,GAAG,CAACC,YAAD,EAAeC,UAAf,KAA8B;AAE5C,QAAMC,GAAG,GAAI,kEAAiED,UAAW,EAAzF;AAEAnB,EAAAA,KAAK,CAACI,GAAN,CAAUgB,GAAV,EAAef,IAAf,CAAoBC,GAAG,IAAI;AACvB,UAAMe,IAAI,GAAGf,GAAG,CAACE,IAAJ,CAASc,OAAtB;AAEA,QAAG,CAACD,IAAD,IAASA,IAAI,CAACP,MAAL,KAAgB,CAA5B,EACI;AAEJ,UAAMS,SAAS,GAAGF,IAAI,CAACG,GAAL,CAAS,CAACC,QAAD,EAAWC,cAAX,KAA8B;AACrD,UAAIC,OAAO,GAAG,CAAC,GAAGF,QAAQ,CAACG,iBAAb,EAAgCH,QAAQ,CAACI,cAAzC,CAAd;AACAF,MAAAA,OAAO,GAAGG,OAAO,CAACH,OAAD,CAAjB;AACA,YAAMI,aAAa,GAAGJ,OAAO,CAACH,GAAR,CAAY,CAACQ,MAAD,EAASC,GAAT,KAAiB;AAC/C,eAAO;AACHC,UAAAA,IAAI,EAAEF,MADH;AAEHG,UAAAA,MAAM,EAAElC,cAAc,CAACgC,GAAD;AAFnB,SAAP;AAIH,OALqB,CAAtB;AAOA,YAAMG,aAAa,GAAGL,aAAa,CAACM,IAAd,CAAmBL,MAAM,IAAIA,MAAM,CAACE,IAAP,KAAgBT,QAAQ,CAACI,cAAtD,EAAsEM,MAA5F;AACA,YAAMG,MAAM,GAAGb,QAAQ,CAACA,QAAxB;AACA,YAAMc,MAAM,GAAGb,cAAc,GAAG,CAAhC;AAEA,aAAO;AACHU,QAAAA,aADG;AAEHE,QAAAA,MAFG;AAGHC,QAAAA,MAHG;AAIHR,QAAAA;AAJG,OAAP;AAMH,KApBiB,CAAlB;AAsBA,UAAMS,cAAc,GAAG;AAACjB,MAAAA,SAAD;AAAYkB,MAAAA,KAAK,EAAEvB;AAAnB,KAAvB;AAGAhB,IAAAA,YAAY,CAAC,aAAD,EAAgBsC,cAAhB,CAAZ,CAA4CnC,IAA5C,CAAiDC,GAAG,IAAI;AACpD,YAAMoC,MAAM,GAAGpC,GAAG,CAACE,IAAnB;AACAmC,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACAC,MAAAA,MAAM,CAACC,QAAP,GAAmB,YAAWH,MAAO,EAArC;AACH,KAJD;AAMH,GArCD;AAsCH,CA1CD;;AA6CA,MAAMZ,OAAO,GAAGgB,KAAK,IAAI;AACrB,MAAIC,YAAY,GAAGD,KAAK,CAAChC,MAAzB;AAAA,MAAiCkC,cAAjC;AAAA,MAAiDC,WAAjD;;AAEA,SAAO,MAAMF,YAAb,EAA2B;AAEzBE,IAAAA,WAAW,GAAGtC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBkC,YAA3B,CAAd;AACAA,IAAAA,YAAY,IAAI,CAAhB;AACAC,IAAAA,cAAc,GAAGF,KAAK,CAACC,YAAD,CAAtB;AACAD,IAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACG,WAAD,CAA3B;AACAH,IAAAA,KAAK,CAACG,WAAD,CAAL,GAAqBD,cAArB;AACD;;AAED,SAAOF,KAAP;AACH,CAbD;;AAeA,eAAe3C,gBAAf","sourcesContent":["import axios from 'axios';\nimport mapIdxToLetter from 'utils/mapIdxToLetter';\nimport postToServer from 'utils/postToServer';\n\nconst autoGenerateQuiz = () => {\n    axios.get(\"https://opentdb.com/api_category.php\").then(res => {\n            const categories = res.data.trivia_categories;\n            const randomCategory = categories[Math.floor(Math.random() * categories.length)];\n            const { id, name } = randomCategory;\n            fetchQuiz(name, id);\n    })\n}\n\nconst fetchQuiz = (categoryName, categoryId) => {\n\n    const url = `https://opentdb.com/api.php?amount=10&difficulty=easy&category=${categoryId}`;\n\n    axios.get(url).then(res => {\n        const quiz = res.data.results;\n\n        if(!quiz || quiz.length === 0)\n            return \n        \n        const questions = quiz.map((question, questionNumber) => {\n            let answers = [...question.incorrect_answers, question.correct_answer];\n            answers = shuffle(answers);\n            const answerChoices = answers.map((answer, idx) => {\n                return {\n                    body: answer,\n                    letter: mapIdxToLetter(idx)\n                }\n            })\n\n            const correctAnswer = answerChoices.find(answer => answer.body === question.correct_answer).letter;\n            const prompt = question.question;\n            const number = questionNumber + 1;\n\n            return {\n                correctAnswer,\n                prompt,\n                number,\n                answerChoices\n            };\n        })\n\n        const submissionQuiz = {questions, topic: categoryName};\n\n\n        postToServer(\"api/quizzes\", submissionQuiz).then(res => {\n            const quizId = res.data;\n            alert(\"Your quiz has been made.\")\n            window.location = `/quizzes/${quizId}`;\n        })\n        \n    })\n}\n\n\nconst shuffle = array => {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    while (0 !== currentIndex) {\n  \n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n}\n \nexport default autoGenerateQuiz;"]},"metadata":{},"sourceType":"module"}